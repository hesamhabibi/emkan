{
	"info": {
		"_postman_id": "a2362ce9-f0cb-4aa9-9794-897b876d6fe6",
		"name": "IPortal V1.0.9",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Auth",
			"item": [
				{
					"name": "panelRegister",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    const token = JSON.parse(responseBody)['data']['result']['token']\r",
									"    postman.setEnvironmentVariable(\"token\",token);\r",
									"} catch {\r",
									"    console.log(\"token not found\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "\r\nmutation($input: UserPanelRegisterInput!) {\r\n  result: panelRegister(input: $input) {\r\n    token\r\n    user {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n        \"name\": \"majid\",\r\n        \"last_name\": \"shishegar\",\r\n        \"username\": \"majidsh\",\r\n        \"email\": \"majidshishegar0@gmail.com\",\r\n        \"mobile\": \"09174835099\",\r\n        \"password\": \"1234\",\r\n        \"password_confirmation\": \"1234\",\r\n        \"recaptcha_v3_token\": \"skip\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "panelLogin",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    const token = JSON.parse(responseBody)['data']['result']['token']\r",
									"    postman.setEnvironmentVariable(\"token\",token);\r",
									"} catch {\r",
									"    console.log(\"token not found\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($username: String!, $password: String!,$recaptcha_v3_token: String) {\r\n  result: panelLogin(username: $username, password: $password,recaptcha_v3_token: $recaptcha_v3_token) {\r\n    token\r\n    user {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n    menu_items {\r\n        id\r\n        access_component_id # if is null menu item is collapse\r\n        parent_id\r\n        sort\r\n        title\r\n        icon\r\n        badge_key\r\n        route\r\n        columns\r\n        fields\r\n        actions\r\n        child_access_components_keys\r\n    }\r\n    settings\r\n  }\r\n}",
								"variables": "{\r\n    \"username\": \"majidshishegar0@gmail.com\",\r\n    \"password\": \"1234\",\r\n    \"recaptcha_v3_token\": \"skip\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "panelLogout",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    postman.setEnvironmentVariable(\"token\",'')\r",
									"} catch {\r",
									"    console.log(\"token not found\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation {\r\n    result: panelLogout {\r\n        success\r\n        message\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "resetPasswordEmail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($email: String!,$recaptcha_v3_token: String) {\r\n  result: resetPasswordEmail(email: $email,recaptcha_v3_token: $recaptcha_v3_token) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"email\": \"majidshishegar0@gmail.com\",\r\n  \"recaptcha_v3_token\": \"skip\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "resetPassword",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($input:UserResetPasswordInput){\r\n  result: resetPassword (input:$input)\r\n  {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"email\":\"majidshishegar0@gmail.com\",\r\n    \"token\":\"1234\",\r\n    \"password\":\"1234\",\r\n    \"password_confirmation\":\"1234\",\r\n    \"recaptcha_v3_token\": \"skip\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SMSLoginSendCode",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($mobile:String!,$recaptcha_v3_token: String) {\r\n  result : SMSLoginSendToken (mobile:$mobile,recaptcha_v3_token: $recaptcha_v3_token){\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"mobile\": \"09174835099\",\r\n  \"recaptcha_v3_token\": \"skip\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SMSLoginVerifyCode",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"try {\r",
									"    const token = JSON.parse(responseBody)['data']['result']['token']\r",
									"    postman.setEnvironmentVariable(\"token\",token)\r",
									"} catch {\r",
									"    console.log(\"token not found\")\r",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($mobile:String!,$token:String!,$recaptcha_v3_token:String) {\r\n  result: SMSLoginVerifyToken (mobile:$mobile,token:$token,recaptcha_v3_token:$recaptcha_v3_token){\r\n    token\r\n    user {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"mobile\": \"09174835099\",\r\n  \"token\": \"3719\",\r\n  \"recaptcha_v3_token\": \"skip\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "SMSRegisterSendCode",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: UserWebRegisterInput!) {\r\n  result: SMSRegisterSendToken(input: $input) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"name\": \"majid\",\r\n    \"last_name\": \"shishegar\",\r\n    \"username\": \"majidsh\",\r\n    \"email\": \"majidshishegar0@gmail.com\",\r\n    \"mobile\": \"09174835099\",\r\n    \"recaptcha_v3_token\": \"skip\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSelf",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  result: getSelf {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Access",
			"item": [
				{
					"name": "getAccess",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($id:ID!) {\r\n  result: getAccess(id:$id){\r\n    id\r\n    name\r\n    description\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # accessControlLists\r\n    # users\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60647be639df17091031902e\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAccesses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: AccessFilter) {\r\n  result: getAccesses(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n      page\r\n      limit\r\n      total\r\n      pages\r\n    }\r\n    data {\r\n      id\r\n      name\r\n      description\r\n      createdAt\r\n      updatedAt\r\n      \r\n      # accessControlLists\r\n      # users\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAccesses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: AccessFilter) {\r\n  result: getAllAccesses(filter: $filter) {\r\n    id\r\n    name\r\n    description\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # accessControlLists\r\n    # users\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAccessIdsByAccess",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: AccessFilter) {\r\n  result: getAccessIdsByAccess(filter: $filter) {\r\n    id\r\n    name\r\n    description\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # accessControlLists\r\n    # users\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createAccess",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: AccessInput!) {\r\n  result: createAccess(input: $input) {\r\n    id\r\n    name\r\n    description\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # accessControlLists\r\n    # users\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"name\": \"access name\",\r\n    \"description\": \"description about access\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAccess",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: AccessInput!) {\r\n  result: updateAccess(id: $id, input: $input) {\r\n    id\r\n    name\r\n    description\r\n    createdAt\r\n    updatedAt\r\n\r\n    # accessControlLists\r\n    # users\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"606c8c339f6e972078a5fafc\",\r\n  \"input\": {\r\n    \"name\": \"changed name\",\r\n    \"description\": \"new description ...\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAccess",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteAccess(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"606c8c339f6e972078a5fafc\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AccessComponent",
			"item": [
				{
					"name": "getAccessComponent",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getAccessComponent(id: $id) {\r\n    id\r\n    name\r\n    type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n    key\r\n    action_type\r\n    action\r\n    field\r\n    description\r\n    sort\r\n    parent_id\r\n    kind_status\r\n    createdAt\r\n    updatedAt\r\n\r\n    is_internal\r\n\r\n    # children\r\n    # parent\r\n    # accessControlLists\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"607df2c4accf750cc894a5a8\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAccessComponents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: AccessComponentFilter) {\r\n  result: getAccessComponents(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        name\r\n        type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n        key\r\n        action_type\r\n        action\r\n        field\r\n        description\r\n        sort\r\n        parent_id\r\n        kind_status\r\n        createdAt\r\n        updatedAt\r\n\r\n        is_internal\r\n\r\n        # children\r\n        # parent\r\n        # accessControlLists\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAccessComponents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: AccessComponentFilter) {\r\n  result: getAllAccessComponents(filter: $filter) {\r\n        id\r\n        name\r\n        type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n        key\r\n        action_type\r\n        action\r\n        field\r\n        description\r\n        sort\r\n        parent_id\r\n        kind_status\r\n        createdAt\r\n        updatedAt\r\n\r\n        is_internal\r\n        is_completed\r\n\r\n        # children\r\n        # parent\r\n        # accessControlLists\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAccessComponentsChildren",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: ID!, $filter: AccessComponentFilter) {\r\n  result: getAllAccessComponentsChildren(parent_id: $parent_id, filter: $filter) {\r\n        id\r\n        name\r\n        type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n        key\r\n        action_type\r\n        action\r\n        field\r\n        description\r\n        sort\r\n        parent_id\r\n        kind_status\r\n        createdAt\r\n        updatedAt\r\n\r\n        is_internal\r\n\r\n        # children\r\n        # parent\r\n        # accessControlLists\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"parent_id\": \"608ac57e6d1162311ca6f0de\",\r\n    \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAccessComponentsChildrenWithACL",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($parent_id: ID!,$access_id: ID, $filter: AccessComponentFilter) {\r\n  result: getAllAccessComponentsChildren(parent_id: $parent_id,access_id:$access_id, filter: $filter) {\r\n        id\r\n        name\r\n        type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n        key\r\n        action_type\r\n        action\r\n        field\r\n        description\r\n        sort\r\n        parent_id\r\n        kind_status\r\n        createdAt\r\n        updatedAt\r\n\r\n        is_internal\r\n        has_access\r\n\r\n        # children\r\n        # parent\r\n        # accessControlLists\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"parent_id\": \"607df2c4accf750cc894a5a8\",\r\n    \"access_id\": \"607df1ebaccf750cc894a5a7\",\r\n    \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createAccessComponent",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: AccessComponentInput!) {\r\n  result: createAccessComponent(input: $input) {\r\n        id\r\n        name\r\n        type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n        key\r\n        action_type\r\n        action\r\n        field\r\n        description\r\n        sort\r\n        parent_id\r\n        kind_status\r\n        createdAt\r\n        updatedAt\r\n\r\n        is_internal\r\n\r\n        # children\r\n        # parent\r\n        # accessControlLists\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"name\": \"component name\",\r\n    \"type\": 1,\r\n    \"key\": \"keyOfComponent\",\r\n    \"action\": \"some action\",\r\n    \"description\": \"some description\",\r\n    \"parent_id\": \"\",\r\n    \"kind_status\": 1\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAccessComponent",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: AccessComponentInput!) {\r\n  result: updateAccessComponent(id: $id, input: $input) {\r\n        id\r\n        name\r\n        type # values: {\"menu_item\": 1, \"column\": 2, \"route\": 3, \"id\": 4, \"action\": 5}\r\n        key\r\n        action_type\r\n        action\r\n        field\r\n        description\r\n        sort\r\n        parent_id\r\n        kind_status\r\n        createdAt\r\n        updatedAt\r\n\r\n        is_internal\r\n\r\n        # children\r\n        # parent\r\n        # accessControlLists\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"606c93facea9a603b46ade3b\",\r\n  \"input\": {\r\n    \"name\": \"new name\",\r\n    \"type\": 2,\r\n    \"key\": \"newKey\",\r\n    \"action\": \"new action\",\r\n    \"description\": \"new description\",\r\n    \"parent_id\": \"\",\r\n    \"kind_status\": 1\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAccessComponent",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteAccessComponent(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"606c93facea9a603b46ade3b\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortAccessComponents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($input:[sortAccessComponentInput]){\r\n  result : sortAccessComponents(input:$input){\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": [\r\n    {\r\n      \"id\": \"607df2c4accf750cc894a5a8\",\r\n      \"sort\": 1,\r\n      \"parent_id\": null\r\n    },\r\n    {\r\n      \"id\": \"607df336accf750cc894a5a9\",\r\n      \"sort\": 3,\r\n      \"parent_id\": \"607df2c4accf750cc894a5a8\"\r\n    },\r\n    {\r\n      \"id\": \"607df34aaccf750cc894a5aa\",\r\n      \"sort\": 2,\r\n      \"parent_id\": \"607df2c4accf750cc894a5a8\"\r\n    },\r\n    {\r\n      \"id\": \"607df35baccf750cc894a5ab\",\r\n      \"sort\": 4,\r\n      \"parent_id\": \"607df2c4accf750cc894a5a8\"\r\n    }\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AccessControlList",
			"item": [
				{
					"name": "getAccessControlList",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getAccessControlList(id: $id) {\r\n    id\r\n    access_id\r\n    access_component_id\r\n    access_component_type # values: {\"menu_item\":\"1\", \"column\":\"2\", \"route\":\"3\", \"id\":\"4\"}\r\n    access_component_action\r\n\r\n    # access\r\n    # accessComponent\r\n    # users\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"6065b860d8bc381fbc0c7b56\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAccessControlLists",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: AccessControlListFilter) {\r\n  result: getAccessControlLists(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n      page\r\n      limit\r\n      total\r\n      pages\r\n    }\r\n    data {\r\n\t  id\r\n      access_id\r\n      access_component_id\r\n      access_component_type # values: {\"menu_item\":\"1\", \"column\":\"2\", \"route\":\"3\", \"id\":\"4\"}\r\n      access_component_action\r\n      \r\n      # access\r\n      # accessComponent\r\n      # users\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": {}\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createAccessControlList",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: AccessControlListInput!) {\r\n  result: createAccessControlList(input: $input) {\r\n    id\r\n    access_id\r\n    access_component_id\r\n    access_component_type # values: {\"menu_item\":\"1\", \"column\":\"2\", \"route\":\"3\", \"id\":\"4\", \"action\": 5}\r\n    access_component_action\r\n    \r\n    # access\r\n    # accessComponent\r\n    # users\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"access_id\": \"607df1ebaccf750cc894a5a7\",\r\n    \"access_component_id\": \"608ac230af9ea12ea848ea21\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAccessControlList",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: AccessControlListInput!) {\r\n  result: updateAccessControlList(id: $id, input: $input) {\r\n    id\r\n    access_id\r\n    access_component_id\r\n    access_component_type # values: {\"menu_item\":\"1\", \"column\":\"2\", \"route\":\"3\", \"id\":\"4\"}\r\n    access_component_action\r\n    \r\n    # access\r\n    # accessComponent\r\n    # users\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"606c98b0cea9a603b46ade3d\",\r\n  \"input\": {\r\n    \"access_id\": \"60647be639df17091031902e\",\r\n    \"access_component_id\": \"6065b4dfd8bc381fbc0c7b54\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAccessControlList",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteAccessControlList(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"606c98b0cea9a603b46ade3d\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "bulkCreateAccessControlList",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($access_id: ID!,$accessComponents: [AccessControlListBulkInput]) {\r\n  result: bulkCreateAccessControlList(access_id: $access_id,accessComponents: $accessComponents) {\r\n    success\r\n    message\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"access_id\": \"607df1ebaccf750cc894a5a7\",\r\n  \"accessComponents\": [\r\n      {\"id\":\"607df2c4accf750cc894a5a8\",\"has_access\":true},\r\n      {\"id\":\"607df34aaccf750cc894a5aa\",\"has_access\":false},\r\n      {\"id\":\"607df35baccf750cc894a5ab\",\"has_access\":true}\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Menu Item",
			"item": [
				{
					"name": "getMenuItem",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getMenuItem(id: $id) {\r\n    id\r\n    title\r\n    icon\r\n    sort\r\n    show_in_menu\r\n    badge_key\r\n    access_id\r\n    access_component_id\r\n    parent_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # access\r\n    # access_component\r\n    # parent\r\n    # children\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6061bf73594b290dd0b108e2\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMenuItems",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: MenuItemFilter) {\r\n  result: getMenuItems(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        icon\r\n        sort\r\n        show_in_menu\r\n        badge_key\r\n        access_id\r\n        access_component_id\r\n        parent_id\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # access\r\n        # access_component\r\n        # parent\r\n        # children\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllMenuItems",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: MenuItemFilter) {\r\n  result: getAllMenuItems(filter: $filter) {\r\n        id\r\n        title\r\n        icon\r\n        sort\r\n        show_in_menu\r\n        badge_key\r\n        access_id\r\n        access_component_id\r\n        parent_id\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # access\r\n        # access_component\r\n        # parent\r\n        # children\r\n    }\r\n}",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMenuItemsByAccess",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  result: getMenuItemsByAccess {\r\n    id\r\n    access_component_id # if is null menu item is collapse\r\n    parent_id\r\n    sort\r\n    title\r\n    icon\r\n    badge_key\r\n    route\r\n    columns\r\n    fields\r\n    actions\r\n    child_access_components_keys\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createMenuItem",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: MenuItemInput!) {\r\n  result: createMenuItem(input: $input) {\r\n        id\r\n        title\r\n        icon\r\n        sort\r\n        show_in_menu\r\n        badge_key\r\n        access_id\r\n        access_component_id\r\n        parent_id\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # access\r\n        # access_component\r\n        # parent\r\n        # children\r\n    }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": \"title\",\r\n    \"icon\": \"fa fa-times\",\r\n    \"sort\": 9999,\r\n    \"show_in_menu\": true,\r\n    \"badge_key\": \"key\",\r\n    \"access_id\": \"606ebb88e0ff5a3ac0ccac34\",\r\n    \"access_component_id\": \"606eb3851abc6d2be0673d50\",\r\n    \"parent_id\": null\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMenuItem",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: MenuItemInput!) {\r\n  result: updateMenuItem(id: $id, input: $input) {\r\n    id\r\n    title\r\n    icon\r\n    sort\r\n    show_in_menu\r\n    badge_key\r\n    access_id\r\n    access_component_id\r\n    parent_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # access\r\n    # access_component\r\n    # parent\r\n    # childrens\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"607c10ac7d7ade327889f632\",\r\n  \"input\": {\r\n    \"title\": \"changed title\",\r\n    \"icon\": \"fa fa-home\",\r\n    \"sort\": 9998,\r\n    \"show_in_menu\": false,\r\n    \"badge_key\": \"key\",\r\n    \"access_id\": \"606ebb88e0ff5a3ac0ccac34\",\r\n    \"access_component_id\": \"606eb3851abc6d2be0673d50\",\r\n    \"parent_id\": \"607a1ba2951a48215c2d7366\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMenuItem",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteMenuItem(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"607a1aa0951a48215c2d7364\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortMenuItem",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($input:[sortMenuItemInput]){\r\n  result : sortMenuItems(input:$input){\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": [\r\n    {\r\n      \"id\": \"607df4b5accf750cc94a5b2\",\r\n      \"sort\": 1,\r\n      \"parent_id\": null\r\n    },\r\n    {\r\n      \"id\": \"608822be8dbfb62038e5148e\",\r\n      \"sort\": 3,\r\n      \"parent_id\": \"607df4b5accf750cc894a5b2\"\r\n    }\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Media",
			"item": [
				{
					"name": "getMedia",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getMedia(id: $id) {\r\n    id\r\n    is_public\r\n    url\r\n    path\r\n    extension\r\n    sort\r\n    main\r\n    type # {\"video\": 1, \"image\": 2, \"audio\": 3, \"unknown\": 4, \"document\": 5}\r\n    size\r\n    alt\r\n    filename\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    information {\r\n      width\r\n      height\r\n      duration\r\n      codec_name\r\n      codec_long_name\r\n    }\r\n\r\n    #   user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"607f107291e259361499c0d8\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getMedias",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: MediaFilter) {\r\n  result: getMedias(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        is_public\r\n        url\r\n        path\r\n        extension\r\n        sort\r\n        main\r\n        type # {\"video\": 1, \"image\": 2, \"audio\": 3, \"unknown\": 4, \"document\": 5}\r\n        size\r\n        alt\r\n        filename\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n        information {\r\n        width\r\n        height\r\n        duration\r\n        codec_name\r\n        codec_long_name\r\n        }\r\n\r\n        #   user\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllMedias",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: MediaFilter) {\r\n  result: getAllMedias(filter: $filter) {\r\n        id\r\n        is_public\r\n        url\r\n        path\r\n        extension\r\n        sort\r\n        main\r\n        type # {\"video\": 1, \"image\": 2, \"audio\": 3, \"unknown\": 4, \"document\": 5}\r\n        size\r\n        alt\r\n        filename\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n        information {\r\n        width\r\n        height\r\n        duration\r\n        codec_name\r\n        codec_long_name\r\n        }\r\n\r\n        #   user\r\n    }\r\n}",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMedia",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: MediaInput!) {\r\n  result: updateMedia(id: $id, input: $input) {\r\n    id\r\n    is_public\r\n    url\r\n    path\r\n    extension\r\n    sort\r\n    main\r\n    type # {\"video\": 1, \"image\": 2, \"audio\": 3, \"unknown\": 4, \"document\": 5}\r\n    size\r\n    alt\r\n    filename\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    information {\r\n      width\r\n      height\r\n      duration\r\n      codec_name\r\n      codec_long_name\r\n    }\r\n\r\n    #   user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"607f106991e259361499c0d7\",\r\n  \"input\": {\r\n    \"sort\": 9999,\r\n    \"main\": false,\r\n    \"alt\": \"alt text\""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteMedia",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteMedia(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"607f107291e259361499c0d8\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortMedias",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($input:[sortMediaInput]){\r\n  result : sortMedias(input:$input){\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": [\r\n    {\r\n      \"id\": \"60a892369294261c6c01e5dc\",\r\n      \"sort\": 1,\r\n      \"main\": false,\r\n      \"alt\": \"alt text\"\r\n    },\r\n    {\r\n      \"id\": \"60af56f53562bc1ea04e8c85\",\r\n      \"sort\": 3,\r\n      \"main\": true,\r\n      \"alt\": \"alt text\"\r\n    },\r\n    {\r\n      \"id\": \"60af58863562bc1ea04e8c95\",\r\n      \"sort\": 2,\r\n      \"main\": false,\r\n      \"alt\": \"alt text\"\r\n    },\r\n    {\r\n      \"id\": \"60b892924509c009d4853363\",\r\n      \"sort\": 4,\r\n      \"main\": false,\r\n      \"alt\": \"alt text\"\r\n    }\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMediaBlog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								},
								{
									"key": "sort",
									"value": "3",
									"type": "text"
								},
								{
									"key": "main",
									"value": "1",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-media-blog",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-media-blog"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMediaBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								},
								{
									"key": "sort",
									"value": "1",
									"type": "text"
								},
								{
									"key": "main",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-media-brand",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-media-brand"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMediaCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": "/C:/Users/Majid/Downloads/WhatsApp Image 2021-05-25 at 4.29.13 PM.jpeg"
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								},
								{
									"key": "sort",
									"value": "1",
									"type": "text"
								},
								{
									"key": "main",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-media-category",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-media-category"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMediaProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								},
								{
									"key": "sort",
									"value": "1",
									"type": "text"
								},
								{
									"key": "main",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-media-product",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-media-product"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadVideoProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-video-product",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-video-product"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMediaCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								},
								{
									"key": "sort",
									"value": "1",
									"type": "text"
								},
								{
									"key": "main",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-image-collection",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-image-collection"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadMediaSlider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								},
								{
									"key": "sort",
									"value": "1",
									"type": "text"
								},
								{
									"key": "main",
									"value": "0",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-image-slider",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-image-slider"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadImage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-image",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-image"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadVideo",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-video",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-video"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadAudio",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								},
								{
									"key": "alt",
									"value": "alt text",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-audio",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-audio"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadDocument",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-document",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-document"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadFile",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "file",
									"type": "file",
									"src": []
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-file",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-file"
							]
						}
					},
					"response": []
				},
				{
					"name": "uploadEmbedded",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "html",
									"value": "<embedded></embedded>",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/media/upload-embedded",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"upload-embedded"
							]
						}
					},
					"response": []
				},
				{
					"name": "downloadMedia",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/api/media/download-media?id=60b892924509c009d4853363",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"media",
								"download-media"
							],
							"query": [
								{
									"key": "id",
									"value": "60b892924509c009d4853363"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Category",
			"item": [
				{
					"name": "getCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getCategory(id: $id) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    type # {blog:1, page:2, product:3}\r\n    sort\r\n    parent_id\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # parent\r\n    # children\r\n    # blogs\r\n    # products\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"607f107291e259361499c0d8\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCategories",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CategoryFilter) {\r\n  result: getCategories(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        active\r\n        show_in_menu\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        type # {blog:1, page:2, product:3}\r\n        sort\r\n        parent_id\r\n        seo_id\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # parent\r\n        # children\r\n        # blogs\r\n        # products\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        # user\r\n        seo {\r\n            title # mulit language\r\n            title_panel\r\n            title_web\r\n            description # mulit language\r\n            description_panel\r\n            description_web\r\n            keywords # mulit language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status #[\"auto\": 1, \"custom\": 2]\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllCategories",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CategoryFilter) {\r\n  result: getAllCategories(filter: $filter) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    type # {blog:1, page:2, product:3}\r\n    sort\r\n    parent_id\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # parent\r\n    # children\r\n    # blogs\r\n    # products\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CategoryInput!) {\r\n  result: createCategory(input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    type # {blog:1, page:2, product:3}\r\n    sort\r\n    parent_id\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # parent\r\n    # children\r\n    # blogs\r\n    # products\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"new category\"\r\n    },\r\n    \"active\": true,\r\n    \"show_in_menu\": true,\r\n    \"description\": {\r\n        \"fa\": \"description about this category\"\r\n    },\r\n    \"type\": 1,\r\n    \"sort\": 1,\r\n    \"parent_id\": null,\r\n    \"media\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    },\r\n    \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"seo title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"seo keywords\"\r\n        },\r\n        \"url\": \"slug\",\r\n        \"canonical_url\": \"/url/\",\r\n        \"redirect_url_301\": \"/url/\",\r\n        \"redirect_url_404\": \"/url/\",\r\n        \"robots_status\": 1\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: CategoryInput!) {\r\n  result: updateCategory(id: $id, input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    type # {blog:1, page:2, product:3}\r\n    sort\r\n    parent_id\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # parent\r\n    # children\r\n    # blogs\r\n    # products\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"6087380bea04282744e07f00\",\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"changed category\"\r\n    },\r\n    \"active\": false,\r\n    \"show_in_menu\": false,\r\n    \"description\": {\r\n        \"fa\": \"changed description about this category\"\r\n    },\r\n    \"type\": 2,\r\n    \"sort\": 2,\r\n    \"parent_id\": null,\r\n    \"media\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    },\r\n    \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"new seo title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"new seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"new seo keywords\"\r\n        },\r\n        \"url\": \"new slug\",\r\n        \"canonical_url\": \"new/url/\",\r\n        \"redirect_url_301\": \"new/url/\",\r\n        \"redirect_url_404\": \"new/url/\",\r\n        \"robots_status\": 2\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteCategory(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60873fceea04282744e07f0d\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "duplicateCategory",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $title: String) {\r\n  result: duplicateCategory(id: $id, title: $title) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    type # {blog:1, page:2, product:3}\r\n    sort\r\n    parent_id\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # parent\r\n    # children\r\n    # blogs\r\n    # products\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"6087380bea04282744e07f00\",\r\n  \"title\": {\r\n      \"fa\": \"title\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortCategories",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($input:[sortCategoryInput]){\r\n  result : sortCategories(input:$input){\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": [\r\n    {\r\n      \"id\": \"60aa04a497e2b2205425e175\",\r\n      \"sort\": 1,\r\n      \"parent_id\": null\r\n    },\r\n    {\r\n      \"id\": \"60aa04b597e2b2205425e179\",\r\n      \"sort\": 3,\r\n      \"parent_id\": \"60aa04a497e2b2205425e175\"\r\n    },\r\n    {\r\n      \"id\": \"60aa04bf97e2b2205425e17c\",\r\n      \"sort\": 2,\r\n      \"parent_id\": \"60aa04a497e2b2205425e175\"\r\n    },\r\n    {\r\n      \"id\": \"60aa04c897e2b2205425e17f\",\r\n      \"sort\": 4,\r\n      \"parent_id\": \"60aa04a497e2b2205425e175\"\r\n    }\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Blog",
			"item": [
				{
					"name": "getBlog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getBlog(id: $id) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    summary # mulit language\r\n    summary_panel\r\n    summary_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n    publishAt\r\n    has_rating\r\n    has_comment\r\n    is_special\r\n    type # [\"blog\": 1, \"page\": 2]\r\n    category_id\r\n    seo_id\r\n    tag_ids\r\n    tag_group_id\r\n    user_id\r\n    visit_count\r\n    rate_average\r\n    user_rate\r\n    createdAt\r\n    updatedAt\r\n\r\n    # category\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    document {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n    # tags\r\n    # tag_group\r\n    # user\r\n    # comments\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBlogs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: BlogFilter) {\r\n  result: getBlogs(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        summary # mulit language\r\n        summary_panel\r\n        summary_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"blog\": 1, \"page\": 2]\r\n        category_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        # category\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        document {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n\r\n        seo {\r\n            title # mulit language\r\n            title_panel\r\n            title_web\r\n            description # mulit language\r\n            description_panel\r\n            description_web\r\n            keywords # mulit language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n        redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        # tags\r\n        # tag_group\r\n        # user\r\n        # comments\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllBlogs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: BlogFilter) {\r\n  result: getAllBlogs(filter: $filter) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    summary # mulit language\r\n    summary_panel\r\n    summary_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n    publishAt\r\n    has_rating\r\n    has_comment\r\n    is_special\r\n    type # [\"blog\": 1, \"page\": 2]\r\n    category_id\r\n    seo_id\r\n    tag_ids\r\n    tag_group_id\r\n    user_id\r\n    visit_count\r\n    rate_average\r\n    user_rate\r\n    createdAt\r\n    updatedAt\r\n\r\n    # category\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    document {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n    # tags\r\n    # tag_group\r\n    # user\r\n    # comments\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createBlog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: BlogInput!) {\r\n  result: createBlog(input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    summary # mulit language\r\n    summary_panel\r\n    summary_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n    publishAt\r\n    has_rating\r\n    has_comment\r\n    is_special\r\n    type # [\"blog\": 1, \"page\": 2]\r\n    category_id\r\n    seo_id\r\n    tag_ids\r\n    tag_group_id\r\n    user_id\r\n    visit_count\r\n    rate_average\r\n    user_rate\r\n    createdAt\r\n    updatedAt\r\n\r\n    # category\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    document {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n    # tags\r\n    # tag_group\r\n    # user\r\n    # comments\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n      \"title\": {\r\n          \"fa\": \"title\"\r\n      },\r\n      \"summary\": {\r\n          \"fa\": \"summary\"\r\n      },\r\n      \"description\": {\r\n          \"fa\": \"description\"\r\n      },\r\n      \"status\": 1,\r\n      \"publishAt\": \"1632982883350\",\r\n      \"has_rating\": 1,\r\n      \"has_comment\": 1,\r\n      \"is_special\": 0,\r\n      \"type\": 1,\r\n      \"category_id\": \"\",\r\n      \"media_gallery\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"sort\": 1,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60af56f53562bc1ea04e8c85\",\r\n                \"sort\": 3,\r\n                \"main\": true,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60a892369294261c6c01e5dc\",\r\n                \"sort\": 2,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ],\r\n      \"document\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n      },\r\n      \"tag_ids\": [\r\n          \"609971d4f67c873970e67302\",\r\n          \"609971d4f67c873970e67303\",\r\n          \"609971d4f67c873970e67304\"\r\n      ],\r\n      \"tag_group_id\": \"608f0d98d37ca40e44f51d83\",\r\n      \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"seo_title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"seo keywords\"\r\n        },\r\n        \"url\": \"slug\",\r\n        \"canonical_url\": \"/url/\",\r\n        \"redirect_url_301\": \"/url2/\",\r\n        \"redirect_url_404\": \"/new/url/\",\r\n        \"robots_status\": 1\r\n      }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBlog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: BlogInput!) {\r\n  result: updateBlog(id: $id, input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    summary # mulit language\r\n    summary_panel\r\n    summary_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n    publishAt\r\n    has_rating\r\n    has_comment\r\n    is_special\r\n    type # [\"blog\": 1, \"page\": 2]\r\n    category_id\r\n    seo_id\r\n    tag_ids\r\n    tag_group_id\r\n    user_id\r\n    visit_count\r\n    rate_average\r\n    user_rate\r\n    createdAt\r\n    updatedAt\r\n\r\n    # category\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    document {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n\r\n    seo {\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        keywords # mulit language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n    # tags\r\n    # tag_group\r\n    # user\r\n    # comments\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608f1776d37ca40e44f51d9f\",\r\n  \"input\": {\r\n      \"title\": {\r\n          \"fa\": \"changed title\"\r\n      },\r\n      \"summary\": {\r\n          \"fa\": \"changed summary\"\r\n      },\r\n      \"description\": {\r\n          \"fa\": \"changed description\"\r\n      },\r\n      \"status\": 2,\r\n      \"publishAt\": \"1632982883350\",\r\n      \"has_rating\": 1,\r\n      \"has_comment\": 1,\r\n      \"is_special\": 0,\r\n      \"type\": 2,\r\n      \"category_id\": \"\",\r\n      \"media_gallery\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"sort\": 3,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60af56f53562bc1ea04e8c85\",\r\n                \"sort\": 1,\r\n                \"main\": true,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60a892369294261c6c01e5dc\",\r\n                \"sort\": 2,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ],\r\n      \"document\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n      },\r\n      \"tag_ids\": [\r\n          \"609971d4f67c873970e67302\",\r\n          \"609971d4f67c873970e67303\",\r\n          \"609971d4f67c873970e67304\"\r\n      ],\r\n      \"tag_group_id\": \"608f0d98d37ca40e44f51d83\",\r\n      \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"changed seo_title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"changed seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"changed seo keywords\"\r\n        },\r\n        \"url\": \"new-slug\",\r\n        \"canonical_url\": \"new/url/\",\r\n        \"redirect_url_301\": \"new/url2/\",\r\n        \"redirect_url_404\": \"/url/\",\r\n        \"robots_status\": 2\r\n      }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBlog",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteBlog(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Tag",
			"item": [
				{
					"name": "getTag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getTag(id: $id) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    deep # {\"tag\": 1, \"tag_group\": 2}\r\n    tag_group_ids\r\n\r\n    # tag_groups\r\n    # tag_ids\r\n    # tags\r\n    # blogs\r\n    # products\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608f0d2fd37ca40e44f51d79\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTags",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: TagFilter) {\r\n  result: getTags(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n      page\r\n      limit\r\n      total\r\n      pages\r\n    }\r\n    data {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        deep # {\"tag\": 1, \"tag_group\": 2}\r\n        tag_group_ids\r\n\r\n        # tag_groups\r\n        # tag_ids\r\n        # tags\r\n        # blogs\r\n        # products\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllTags",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: TagFilter) {\r\n  result: getAllTags (filter: $filter) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    deep # {\"tag\": 1, \"tag_group\": 2}\r\n    tag_group_ids\r\n\r\n    # tag_groups\r\n    # tag_ids\r\n    # tags\r\n    # blogs\r\n    # products\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createTag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: TagInput!) {\r\n  result: createTag(input: $input) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    deep # {\"tag\": 1, \"tag_group\": 2}\r\n    tag_group_ids\r\n\r\n    # tag_groups\r\n    # tag_ids\r\n    # tags\r\n    # blogs\r\n    # products\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n      \"title\": {\r\n          \"fa\": \"tag 1\"\r\n      },\r\n      \"deep\": 1,\r\n      \"tag_group_ids\": [],\r\n      \"tag_ids\": []\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateTag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: TagInput!) {\r\n  result: updateTag(id: $id, input: $input) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    deep # {\"tag\": 1, \"tag_group\": 2}\r\n    tag_group_ids\r\n\r\n    # tag_groups\r\n    # tag_ids\r\n    # tags\r\n    # blogs\r\n    # products\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608d9104b5f7ef344c250d94\",\r\n  \"input\": {\r\n      \"title\": {\r\n          \"fa\": \"changed title\"\r\n      },\r\n      \"tag_group_ids\": [],\r\n      \"tag_ids\": []\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteTag",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteTag(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608d9109b5f7ef344c250d96\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Brand",
			"item": [
				{
					"name": "getBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getBrand(id: $id) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608fe4da1bc1c70cc09e70b7\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBrands",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: BrandFilter) {\r\n  result: getBrands(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        active\r\n        show_in_menu\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        seo_id\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n        \r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        # user\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status #[\"auto\": 1, \"custom\": 2]\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllBrands",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: BrandFilter) {\r\n  result: getAllBrands(filter: $filter) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: BrandInput!) {\r\n  result: createBrand(input: $input) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"new brand\"\r\n    },\r\n    \"active\": true,\r\n    \"show_in_menu\": true,\r\n    \"description\": {\r\n        \"fa\": \"description about this brand\"\r\n    },\r\n    \"media\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    },\r\n    \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"seo title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"seo keywords\"\r\n        },\r\n        \"url\": \"slug\",\r\n        \"canonical_url\": \"/url/\",\r\n        \"redirect_url_301\": \"/url/\",\r\n        \"redirect_url_404\": \"/url/\",\r\n        \"robots_status\": 1\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: BrandInput!) {\r\n  result: updateBrand(id: $id, input: $input) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"608fe4da1bc1c70cc09e70b7\",\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"changed brand\"\r\n    },\r\n    \"active\": false,\r\n    \"show_in_menu\": false,\r\n    \"description\": {\r\n        \"fa\": \"changed description about this brand\"\r\n    },\r\n    \"media\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    },\r\n    \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"new seo title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"new seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"new seo keywords\"\r\n        },\r\n        \"url\": \"new slug\",\r\n        \"canonical_url\": \"new/url/\",\r\n        \"redirect_url_301\": \"new/url/\",\r\n        \"redirect_url_404\": \"new/url/\",\r\n        \"robots_status\": 2\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteBrand(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6106bcd4f8600f760eafa9f2\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Product",
			"item": [
				{
					"name": "getProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n    result: getProduct(id: $id) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_id\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant {\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n\r\n            has_media_gallery\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            media_gallery {\r\n                media_id\r\n                main\r\n                alt\r\n                url\r\n                \r\n                # media\r\n            }\r\n\r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n        \r\n        services {\r\n            api_config {\r\n                type # {\"rest\":1,\"graphql':2}\r\n                app_key\r\n                url\r\n                mutation\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # category\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"61bc780156572bfe86f6fd8f\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getProducts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: ProductFilter) {\r\n  result: getProducts(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_id\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant {\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n\r\n            has_media_gallery\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            media_gallery {\r\n                media_id\r\n                main\r\n                alt\r\n                url\r\n                \r\n                # media\r\n            }\r\n\r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n        \r\n        services {\r\n            api_config {\r\n                type # {\"rest\":1,\"graphql':2}\r\n                app_key\r\n                url\r\n                mutation\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # category\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllProducts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: ProductFilter) {\r\n    result: getAllProducts(filter: $filter) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_id\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant {\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n            \r\n            has_media_gallery\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            media_gallery {\r\n                media_id\r\n                main\r\n                alt\r\n                url\r\n                \r\n                # media\r\n            }\r\n            \r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n\r\n        services {\r\n            api_config {\r\n                type # {\"rest\":1,\"graphql':2}\r\n                app_key\r\n                url\r\n                mutation\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # category\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllRelatedProductBySelection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: ProductFilter, $selection:RelatedProductSelectionInput) {\r\n    result: getAllRelatedProductBySelection(filter: $filter, selection: $selection) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_id\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n       rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant {\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n            \r\n            has_media_gallery\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            media_gallery {\r\n                media_id\r\n                main\r\n                alt\r\n                url\r\n                \r\n                # media\r\n            }\r\n            \r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n        \r\n        services {\r\n            api_config {\r\n                type # {\"rest\":1,\"graphql':2}\r\n                app_key\r\n                url\r\n                mutation\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # category\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null,\r\n  \"selection\": {\r\n      \"category_ids\": [],\r\n      \"brand_ids\": [],\r\n      \"product_code\": \"\",\r\n      \"title\": \"\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllColorLabels",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n    result: getAllColorLabels {\r\n        key\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        values # JSON\r\n    }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: ProductInput!) {\r\n  result: createProduct(input: $input) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_id\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant {\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n            \r\n            has_media_gallery\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            media_gallery {\r\n                media_id\r\n                main\r\n                alt\r\n                url\r\n                \r\n                # media\r\n            }\r\n            \r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n        \r\n        services {\r\n            api_config {\r\n                type # {\"rest\":1,\"graphql':2}\r\n                app_key\r\n                url\r\n                mutation\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # category\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"title\"\r\n        },\r\n        \"summary\": {\r\n            \"fa\": \"summary\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"description\"\r\n        },\r\n        \"strengths\": [\r\n            {\"fa\": \"strength 1\"},\r\n            {\"fa\": \"strength 2\"},\r\n            {\"fa\": \"strength 3\"}\r\n        ],\r\n        \"weaknesses\": [\r\n            {\"fa\": \"weaknesses 1\"},\r\n            {\"fa\": \"weaknesses 2\"},\r\n            {\"fa\": \"weaknesses 3\"}\r\n        ],\r\n        \"main_features\": [\r\n            {\"fa\": \"main_feature 1\"},\r\n            {\"fa\": \"main_feature 2\"},\r\n            {\"fa\": \"main_feature 3\"}\r\n        ],\r\n        \"status\": 1,\r\n        \"publishAt\": \"1629112379819\",\r\n        \"has_rating\": true,\r\n        \"has_comment\": true,\r\n        \"is_special\": true,\r\n        \"type\": 1,\r\n        \"category_id\": \"\",\r\n        \"brand_id\": \"\",\r\n        \"media_gallery\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"sort\": 1,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60af56f53562bc1ea04e8c85\",\r\n                \"sort\": 3,\r\n                \"main\": true,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60a892369294261c6c01e5dc\",\r\n                \"sort\": 2,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ],\r\n        \"video\": {\r\n            \"media_id\": null,\r\n            \"alt\": \"alt text\",\r\n            \"url\": \"\"\r\n        },\r\n        \"files\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ],\r\n        \"tag_ids\": [\r\n            \"609971d4f67c873970e67303\",\r\n            \"609e8be8ad9a2f0a18404298\",\r\n            \"609e8be8ad9a2f0a1840429a\"\r\n        ],\r\n        \"tag_group_id\": \"60b0ed8f4488141984bfd7d7\",\r\n        \"seo\": {\r\n            \"title\": {\r\n                \"fa\": \"seo_title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"seo description\"\r\n            },\r\n            \"keywords\": {\r\n                \"fa\": \"seo keywords\"\r\n            },\r\n            \"url\": \"slug\",\r\n            \"canonical_url\": \"url/\",\r\n            \"redirect_url_301\": \"url/\",\r\n            \"redirect_url_404\": \"url/\",\r\n            \"robots_status\": 1\r\n        },\r\n        \"attribute_groups\": [\r\n            {\r\n                \"attribute_group_id\": \"60996a63e8064816a07160ac\",\r\n                \"attributes\": [\r\n                    {\r\n                        \"attribute_id\": \"60995976e4dc0a39e87e56af\",\r\n                        \"value\": {\r\n                            \"fa\": \"some value in group\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"attribute_id\": \"60995999e4dc0a39e87e56b2\",\r\n                        \"value\": {\r\n                            \"fa\": \"some other value in group\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"has_variant\": true,\r\n        \"details\": {\r\n            \"product_code\": \"SKU12345\",\r\n            \"warehouse\": \"second floor\",\r\n            \"use_count\": true,\r\n            \"count\": 11,\r\n            \"count_status\": 11,\r\n            \"count_unit\": 11,\r\n            \"limit_min\": 3,\r\n            \"limit_max\": 3,\r\n            \"length\": 100,\r\n            \"width\": 100,\r\n            \"height\": 100,\r\n            \"weight\": 1000\r\n        },\r\n        \"price\": {\r\n            \"price\": 1100,\r\n            \"offer_price\": 1000,\r\n            \"offer_startAt\": \"1720078243061\",\r\n            \"offer_expireAt\": \"1720078243061\",\r\n            \"discount_percent\": 10\r\n        },\r\n        \"variant\": [\r\n            {\r\n                \"name\": {\r\n                    \"fa\": \"رنگ\",\r\n                    \"en\": \"color\"\r\n                },\r\n                \"type\": 2,\r\n                \"labels\": [\r\n                    {\r\n                        \"key\": \"1-1\",\r\n                        \"title\": {\r\n                            \"fa\":\"قرمز\",\r\n                            \"en\": \"red\"\r\n                        },\r\n                        \"values\": {\r\n                            \"color_value\":\"ff4444\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"key\": \"1-1\",\r\n                        \"title\": {\r\n                            \"fa\": \"سبز\",\r\n                            \"en\":\"green\"\r\n                        },\r\n                        \"values\": {\r\n                            \"color_value\": \"33ff44\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": {\r\n                    \"fa\": \"اندازه\",\r\n                    \"en\": \"size\"\r\n                },\r\n                \"type\": 1,\r\n                \"labels\": [\r\n                    {\r\n                        \"key\": \"2-1\",\r\n                        \"title\": {\r\n                            \"fa\": \"xl\",\r\n                            \"en\": \"xl\"\r\n                        },\r\n                        \"values\": null\r\n                    },\r\n                    {\r\n                        \"key\": \"2-2\",\r\n                        \"title\": \"xxl\",\r\n                        \"values\": null\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"mix_variant\": [\r\n            {\r\n                \"keys\": [\"1-1\",\"2-1\"],\r\n                \"is_main_price\": true,\r\n                \"is_active\": true,\r\n                \"sort\": 1,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 11111,\r\n                    \"offer_price\": 11110,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"1630931068513\",\r\n                    \"discount_percent\": null\r\n                }\r\n            },\r\n            {\r\n                \"keys\": [\"1-1\",\"2-2\"],\r\n                \"is_main_price\": false,\r\n                \"is_active\": false,\r\n                \"sort\": 3,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 22222,\r\n                    \"offer_price\": 22200,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"\",\r\n                    \"discount_percent\": null\r\n                }\r\n            },\r\n            {\r\n                \"keys\": [\"1-2\",\"2-1\"],\r\n                \"is_main_price\": false,\r\n                \"is_active\": false,\r\n                \"sort\": 2,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 33333,\r\n                    \"offer_price\": 33000,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"\",\r\n                    \"discount_percent\": null\r\n                }\r\n            },\r\n            {\r\n                \"keys\": [\"1-2\",\"2-2\"],\r\n                \"is_main_price\": false,\r\n                \"is_active\": false,\r\n                \"sort\": 4,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 44444,\r\n                    \"offer_price\": 40000,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"\",\r\n                    \"discount_percent\": null\r\n                }\r\n            }\r\n        ],\r\n        \"collections\": {\r\n            \"related_products\": {\r\n                \"collection_type\": 1,\r\n                \"collection_id\": \"60995999e4dc0a39e87e56b2\",\r\n                \"collection_title\": {\r\n                    \"fa\": \"title\",\r\n                    \"en\": \"title\"\r\n                },\r\n                \"collection_list\": [{\r\n                        \"product_id\": \"60995999e4dc0a39e87e56b2\",\r\n                        \"has_variant_key\": true,\r\n                        \"mix_variant_keys\":[\"1-1\"],\r\n                        \"sort\": 1\r\n                }]\r\n            }\r\n        },\r\n        \"services\": {\r\n            \"api_config\": {\r\n                \"type\": 1,\r\n                \"app_key\": \"jdsflkljakf\",\r\n                \"url\": \"https://api.com\",\r\n                \"mutation\": \"Mutation Set...\"\r\n            }\r\n        },\r\n        \"tutorials\": [\r\n            {\r\n                \"file_key\": \"file_1\",\r\n                \"title\": {\"fa\":\"title\"},\r\n                \"user_access_ids\": []\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: ProductInput!) {\r\n  result: updateProduct(id: $id, input: $input) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        has_comment\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_id\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant {\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n            \r\n            has_media_gallery\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            media_gallery {\r\n                media_id\r\n                main\r\n                alt\r\n                url\r\n                \r\n                # media\r\n            }\r\n            \r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n\r\n        services {\r\n            api_config {\r\n                type # {\"rest\":1,\"graphql':2}\r\n                app_key\r\n                url\r\n                mutation\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # category\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": \"609e8c9692fbce1f54fdcfde\",\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"changed title\"\r\n        },\r\n        \"summary\": {\r\n            \"fa\": \"changed summary\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"changed description\"\r\n        },\r\n        \"strengths\": [\r\n            {\"fa\": \"strength 1\"},\r\n            {\"fa\": \"strength 2\"},\r\n            {\"fa\": \"strength 3\"}\r\n        ],\r\n        \"weaknesses\": [\r\n            {\"fa\": \"weaknesses 1\"},\r\n            {\"fa\": \"weaknesses 2\"},\r\n            {\"fa\": \"weaknesses 3\"}\r\n        ],\r\n        \"main_features\": [\r\n            {\"fa\": \"main feature 1\"},\r\n            {\"fa\": \"main feature 2\"},\r\n            {\"fa\": \"main feature 3\"}\r\n        ],\r\n        \"status\": 2,\r\n        \"publishAt\": \"1629112379819\",\r\n        \"has_rating\": true,\r\n        \"has_comment\": true,\r\n        \"is_special\": true,\r\n        \"type\": 2,\r\n        \"category_id\": \"\",\r\n        \"brand_id\": \"\",\r\n        \"media_gallery\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"sort\": 3,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60af56f53562bc1ea04e8c85\",\r\n                \"sort\": 1,\r\n                \"main\": true,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60a892369294261c6c01e5dc\",\r\n                \"sort\": 2,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ],\r\n        \"video\": {\r\n            \"media_id\": null,\r\n            \"alt\": \"alt text\",\r\n            \"url\": \"\"\r\n        },\r\n        \"files\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ],\r\n        \"tag_ids\": [\r\n            \"609971d4f67c873970e67303\",\r\n            \"609e8be8ad9a2f0a18404298\",\r\n            \"609e8be8ad9a2f0a1840429a\"\r\n        ],\r\n        \"tag_group_id\": \"60b0ed8f4488141984bfd7d7\",\r\n        \"seo\": {\r\n            \"title\": {\r\n                \"fa\": \"changed seo_title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"changed seo description\"\r\n            },\r\n            \"keywords\": {\r\n                \"fa\": \"changed seo keywords\"\r\n            },\r\n            \"url\": \"new-slug50\",\r\n            \"canonical_url\": \"new/url/\",\r\n            \"redirect_url_301\": \"new/url2/\",\r\n            \"redirect_url_404\": \"new/url2/\",\r\n            \"robots_status\": 2\r\n        },\r\n        \"attribute_groups\": [\r\n            {\r\n                \"attribute_group_id\": \"60996a63e8064816a07160ac\",\r\n                \"attributes\": [\r\n                    {\r\n                        \"attribute_id\": \"60995976e4dc0a39e87e56af\",\r\n                        \"value\": {\r\n                            \"fa\": \"some changed value in group\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"attribute_id\": \"60995999e4dc0a39e87e56b2\",\r\n                        \"value\": {\r\n                            \"fa\": \"some changed other value in group\"\r\n                        }\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"has_variant\": true,\r\n        \"details\": {\r\n            \"product_code\": \"SKU12345\",\r\n            \"warehouse\": \"second floor\",\r\n            \"use_count\": true,\r\n            \"count\": 11,\r\n            \"count_status\": 11,\r\n            \"count_unit\": 11,\r\n            \"limit_min\": 3,\r\n            \"limit_max\": 3,\r\n            \"length\": 100,\r\n            \"width\": 100,\r\n            \"height\": 100,\r\n            \"weight\": 1000\r\n        },\r\n        \"price\": {\r\n            \"price\": 1200,\r\n            \"offer_price\": 1000,\r\n            \"offer_startAt\": \"1720078243061\",\r\n            \"offer_expireAt\": \"1720078243061\",\r\n            \"discount_percent\": 15\r\n        },\r\n        \"variant\": [\r\n            {\r\n                \"name\": {\r\n                    \"fa\": \"رنگ\",\r\n                    \"en\": \"color\"\r\n                },\r\n                \"type\": 2,\r\n                \"labels\": [\r\n                    {\r\n                        \"key\": \"1-1\",\r\n                        \"title\": {\r\n                            \"fa\":\"قرمز\",\r\n                            \"en\": \"red\"\r\n                        },\r\n                        \"values\": {\r\n                            \"color_value\":\"ff4444\"\r\n                        }\r\n                    },\r\n                    {\r\n                        \"key\": \"1-1\",\r\n                        \"title\": {\r\n                            \"fa\": \"سبز\",\r\n                            \"en\":\"green\"\r\n                        },\r\n                        \"values\": {\r\n                            \"color_value\": \"33ff44\"\r\n                        }\r\n                    }\r\n                ]\r\n            },\r\n            {\r\n                \"name\": {\r\n                    \"fa\": \"اندازه\",\r\n                    \"en\": \"size\"\r\n                },\r\n                \"type\": 1,\r\n                \"labels\": [\r\n                    {\r\n                        \"key\": \"2-1\",\r\n                        \"title\": {\r\n                            \"fa\": \"xl\",\r\n                            \"en\": \"xl\"\r\n                        },\r\n                        \"values\": null\r\n                    },\r\n                    {\r\n                        \"key\": \"2-2\",\r\n                        \"title\": \"xxl\",\r\n                        \"values\": null\r\n                    }\r\n                ]\r\n            }\r\n        ],\r\n        \"mix_variant\": [\r\n            {\r\n                \"keys\": [\"1-1\",\"2-1\"],\r\n                \"is_main_price\": true,\r\n                \"is_active\": true,\r\n                \"sort\": 1,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 11111,\r\n                    \"offer_price\": 11110,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"1630931068513\",\r\n                    \"discount_percent\": null\r\n                }\r\n            },\r\n            {\r\n                \"keys\": [\"1-1\",\"2-2\"],\r\n                \"is_main_price\": false,\r\n                \"is_active\": false,\r\n                \"sort\": 2,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 22222,\r\n                    \"offer_price\": 22200,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"\",\r\n                    \"discount_percent\": null\r\n                }\r\n            },\r\n            {\r\n                \"keys\": [\"1-2\",\"2-1\"],\r\n                \"is_main_price\": false,\r\n                \"is_active\": false,\r\n                \"sort\": 3,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 33333,\r\n                    \"offer_price\": 33000,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"\",\r\n                    \"discount_percent\": null\r\n                }\r\n            },\r\n            {\r\n                \"keys\": [\"1-2\",\"2-2\"],\r\n                \"is_main_price\": false,\r\n                \"is_active\": false,\r\n                \"sort\": 4,\r\n                \"has_media_gallery\": true,\r\n                \"media_gallery\": [],\r\n                \"details\": {\r\n                    \"product_code\": \"SKU12345\",\r\n                    \"warehouse\": \"second floor\",\r\n                    \"use_count\": true,\r\n                    \"count\": 11,\r\n                    \"count_status\": 11,\r\n                    \"count_unit\": 11,\r\n                    \"limit_min\": 3,\r\n                    \"limit_max\": 3,\r\n                    \"length\": 100,\r\n                    \"width\": 100,\r\n                    \"height\": 100,\r\n                    \"weight\": 1000\r\n                },\r\n                \"price\": {\r\n                    \"price\": 44444,\r\n                    \"offer_price\": 40000,\r\n                    \"offer_startAt\": \"1720078243061\",\r\n                    \"offer_expireAt\": \"\",\r\n                    \"discount_percent\": null\r\n                }\r\n            }\r\n        ],\r\n        \"collections\": {\r\n            \"related_products\": {\r\n                \"collection_type\": 1,\r\n                \"collection_id\": \"60995999e4dc0a39e87e56b2\",\r\n                \"collection_title\": {\r\n                    \"fa\": \"title\",\r\n                    \"en\": \"title\"\r\n                },\r\n                \"collection_list\": [{\r\n                        \"product_id\": \"60995999e4dc0a39e87e56b2\",\r\n                        \"has_variant_key\": true,\r\n                        \"mix_variant_keys\":[\"1-1\"],\r\n                        \"sort\": 1\r\n                }]\r\n            }\r\n        },\r\n        \r\n        \"services\": {\r\n            \"api_config\": {\r\n                \"type\": 1,\r\n                \"app_key\": \"jdsflkljakf\",\r\n                \"url\": \"https://api.com\",\r\n                \"mutation\": \"Mutation Set...\"\r\n            }\r\n        },\r\n        \"tutorials\": [\r\n            {\r\n                \"file_key\": \"file_1\",\r\n                \"title\": {\"fa\":\"title\"},\r\n                \"user_access_ids\": []\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteProduct",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteProduct(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60bcc21e44383932f0dd99dd\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMixVariant",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: [ProductUpdateMixVariantInput]) {\r\n  result: updateMixVariant(input: $input) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n    \"input\": [\r\n        {\r\n            \"product_id\": \"613f2cc2dda2ef16f2b39700\",\r\n            \"keys\": [\"1-1\"],\r\n            \"is_active\": true,\r\n            \"details\": {\r\n                \"product_code\": \"SKU12345\",\r\n                \"warehouse\": \"it is not in second floor\",\r\n                \"use_count\": true,\r\n                \"count\": 11,\r\n                \"count_status\": 11,\r\n                \"count_unit\": 11,\r\n                \"limit_min\": 3,\r\n                \"limit_max\": 3,\r\n                \"length\": 100,\r\n                \"width\": 100,\r\n                \"height\": 100,\r\n                \"weight\": 1000\r\n            },\r\n            \"price\": {\r\n                \"price\": 11100,\r\n                \"offer_price\": 11110,\r\n                \"offer_startAt\": \"1720078243061\",\r\n                \"offer_expireAt\": \"1630931068513\",\r\n                \"discount_percent\": null\r\n            }\r\n        }\r\n    ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateMixVariantByCode",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: [ProductUpdateMixVariantBySlugInput]) {\r\n  result: updateMixVariantByCode(input: $input)  {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n    \"input\": [\r\n        {\r\n            \"product_code\": \"SKU12345\",\r\n            \"is_active\": true,\r\n            \"details\": {\r\n                \"product_code\": \"SKU12345\",\r\n                \"warehouse\": \"i dont know!\",\r\n                \"use_count\": true,\r\n                \"count\": 11,\r\n                \"count_status\": 11,\r\n                \"count_unit\": 11,\r\n                \"limit_min\": 3,\r\n                \"limit_max\": 3,\r\n                \"length\": 100,\r\n                \"width\": 100,\r\n                \"height\": 100,\r\n                \"weight\": 1000\r\n            },\r\n            \"price\": {\r\n                \"price\": 11100,\r\n                \"offer_price\": 11110,\r\n                \"offer_startAt\": \"1720078243061\",\r\n                \"offer_expireAt\": \"1630931068513\",\r\n                \"discount_percent\": null\r\n            }\r\n        }\r\n    ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Attribute",
			"item": [
				{
					"name": "getAttribute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getAttribute(id: $id) {\r\n    id\r\n    parent_id\r\n    sort\r\n    deep\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n\r\n    # deep 1\r\n    attribute_group_ids\r\n    # deep 2\r\n    attribute_ids\r\n    # deep 3\r\n    type # ['text': 1,'big_text': 2,'two_answer_question': 3]\r\n    # attribute_valuess\r\n    default_attribute_value_id\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    \r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute_groups\r\n    # attributes\r\n    # default_attribute_value\r\n    # default_value\r\n    # products\r\n    # parent\r\n    # children\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610115ef9f6bff34378070ff\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAttributes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: AttributeFilter) {\r\n  result: getAttributes(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n      page\r\n      limit\r\n      total\r\n      pages\r\n    }\r\n    data {\r\n        id\r\n        parent_id\r\n        sort\r\n        deep\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        active\r\n\r\n        # deep 1\r\n        attribute_group_ids\r\n        # deep 2\r\n        attribute_ids\r\n        # deep 3\r\n        type # ['text': 1,'big_text': 2,'two_answer_question': 3]\r\n        # attribute_values\r\n        default_attribute_value_id\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        \r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # attribute_groups\r\n        # attributes\r\n        # default_attribute_value\r\n        # default_value\r\n        # products\r\n        # parent\r\n        # children\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAttributes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: AttributeFilter) {\r\n  result: getAllAttributes (filter: $filter) {\r\n    id\r\n    parent_id\r\n    sort\r\n    deep\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n\r\n    # deep 1\r\n    attribute_group_ids\r\n    # deep 2\r\n    attribute_ids\r\n    # deep 3\r\n    type # ['text': 1,'big_text': 2,'two_answer_question': 3]\r\n    # attribute_values\r\n    default_attribute_value_id\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    \r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute_groups\r\n    # attributes\r\n    # default_attribute_value\r\n    # default_value\r\n    # products\r\n    # parent\r\n    # children\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createAttribute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: AttributeInput!) {\r\n  result: createAttribute(input: $input) {\r\n    id\r\n    parent_id\r\n    sort\r\n    deep\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n\r\n    # deep 1\r\n    attribute_group_ids\r\n    # deep 2\r\n    attribute_ids\r\n    # deep 3\r\n    type # ['text': 1,'big_text': 2,'two_answer_question': 3]\r\n    # attribute_values\r\n    default_attribute_value_id\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    \r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute_groups\r\n    # attributes\r\n    # default_attribute_value\r\n    # default_value\r\n    # products\r\n    # parent\r\n    # children\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"parent_id\": null,\r\n        \"sort\": 1,\r\n        \"deep\": 1,\r\n        \"title\": {\r\n            \"fa\": \"attribute title\"\r\n        },\r\n        \"active\": true,\r\n\r\n        \"type\": 1,\r\n        \"default_attribute_value_id\": \"\",\r\n        \"description\": {\r\n            \"fa\": \"placeholder\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAttribute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: AttributeInput!) {\r\n  result: updateAttribute(id: $id, input: $input) {\r\n    id\r\n    parent_id\r\n    sort\r\n    deep\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n\r\n    # deep 1\r\n    attribute_group_ids\r\n    # deep 2\r\n    attribute_ids\r\n    # deep 3\r\n    type # ['text': 1,'big_text': 2,'two_answer_question': 3]\r\n    # attribute_values\r\n    default_attribute_value_id\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    \r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute_groups\r\n    # attributes\r\n    # default_attribute_value\r\n    # default_value\r\n    # products\r\n    # parent\r\n    # children\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"610116149f6bff3437807108\",\r\n    \"input\": {\r\n        \"parent_id\": \"610115ef9f6bff34378070ff\",\r\n        \"sort\": 1,\r\n        \"deep\": 1,\r\n        \"title\": {\r\n            \"fa\": \"attribute variant\"\r\n        },\r\n        \"active\": true,\r\n\r\n        \"type\": 1,\r\n        \"default_attribute_value_id\": \"\",\r\n        \"description\": {\r\n            \"fa\": \"placeholder\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAttributeDefaultValue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $default_attribute_value_id: ID) {\r\n  result: updateAttributeDefaultValue(id: $id, default_attribute_value_id: $default_attribute_value_id) {\r\n    id\r\n    parent_id\r\n    sort\r\n    deep\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n\r\n    # deep 1\r\n    attribute_group_ids\r\n    # deep 2\r\n    attribute_ids\r\n    # deep 3\r\n    type # ['text': 1,'big_text': 2,'two_answer_question': 3]\r\n    # attribute_values\r\n    default_attribute_value_id\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    \r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute_groups\r\n    # attributes\r\n    # default_attribute_value\r\n    # default_value\r\n    # products\r\n    # parent\r\n    # children\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"610116149f6bff3437807108\",\r\n    \"default_attribute_value_id\": \"\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAttribute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteAttribute(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6099599ce4dc0a39e87e56b6\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortAttribute",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation ($input:[sortAttributeInput]){\r\n  result : sortAttributes(input:$input){\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": [\r\n    {\r\n      \"id\": \"60aa04a497e2b2205425e175\",\r\n      \"sort\": 1\r\n    },\r\n    {\r\n      \"id\": \"60aa04b597e2b2205425e179\",\r\n      \"sort\": 3\r\n    },\r\n    {\r\n      \"id\": \"60aa04bf97e2b2205425e17c\",\r\n      \"sort\": 2\r\n    },\r\n    {\r\n      \"id\": \"60aa04c897e2b2205425e17f\",\r\n      \"sort\": 4\r\n    }\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "AttributeValue",
			"item": [
				{
					"name": "getAttributeValue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getAttributeValue(id: $id) {\r\n    id\r\n    attribute_id\r\n    product_id\r\n    value\r\n    value_panel\r\n    value_web\r\n    user_id\r\n    \r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute\r\n    # product\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610115ef9f6bff34378070ff\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAttributeValues",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: AttributeValueFilter) {\r\n  result: getAllAttributeValues (filter: $filter) {\r\n    id\r\n    attribute_id\r\n    product_id\r\n    value\r\n    value_panel\r\n    value_web\r\n    user_id\r\n    \r\n    createdAt\r\n    updatedAt\r\n\r\n    # attribute\r\n    # product\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Report",
			"item": [
				{
					"name": "getReport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getReport(id: $id) {\r\n        id\r\n        action\r\n        action_type # [\"query\": 1, \"mutation\": 2, \"unknown\": 3]\r\n        parameters\r\n        error\r\n        status_code\r\n        status # [\"active\": 1, \"done\": 2]\r\n        user_id\r\n        department # {\"backend\": 1, \"frontend\": 2}\r\n        device_info\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6089970ebcdf732ec8a8df26\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getReports",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: ReportFilter) {\r\n  result: getReports(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        action\r\n        action_type # [\"query: 1, \"mutation\": 2, \"unknown\": 3]\r\n        parameters\r\n        error\r\n        status_code\r\n        status # [\"active\": 1, \"done\": 2]\r\n        user_id\r\n        department # {\"backend\": 1, \"frontend\": 2}\r\n        device_info\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createReport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: ReportInput!) {\r\n  result: createReport(input: $input) {\r\n        id\r\n        action\r\n        action_type # [\"query: 1, \"mutation\": 2, \"unknown\": 3]\r\n        parameters\r\n        error\r\n        status_code\r\n        status # [\"active\": 1, \"done\": 2]\r\n        user_id\r\n        department # {\"backend\": 1, \"frontend\": 2}\r\n        device_info\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"action\": \"/admin/users\",\r\n    \"action_type\": 1,\r\n    \"parameters\": {\r\n        \"date_start\": \"1624303800000\",\r\n        \"date_end\": \"1626982199000\"\r\n    },\r\n    \"error\": {\r\n        \"message\": \"خطا در سیستم\",\r\n        \"errors\": {\r\n            \"default_error\": [\r\n                \"خطا در سیستم\"\r\n            ]\r\n        },\r\n        \"code\": \"500\"\r\n    },\r\n    \"status_code\": 500,\r\n    \"status\": 1,\r\n    \"device_info\": {}\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setStatusReport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $status: Int!) {\r\n    result: setStatusReport(id: $id, status: $status) {\r\n        id\r\n        action\r\n        action_type # [\"query: 1, \"mutation\": 2, \"unknown\": 3]\r\n        parameters\r\n        error\r\n        status_code\r\n        status # [\"active\": 1, \"done\": 2]\r\n        user_id\r\n        department # {\"backend\": 1, \"frontend\": 2}\r\n        device_info\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"6089970ebcdf732ec8a8df26\",\r\n  \"status\": 1\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteReport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteReport(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6089970ebcdf732ec8a8df26\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "User",
			"item": [
				{
					"name": "getUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getUser(id: $id) {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"60843039101d562490e0b2e7\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getUsers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: UserFilter) {\r\n  result: getUsers(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllUsers",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: UserFilter) {\r\n  result: getAllUsers(filter: $filter) {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: UserInput!) {\r\n  result: createUser(input: $input) {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}",
								"variables": "{\r\n  \"input\": {\r\n    \"name\": \"majid\",\r\n    \"last_name\": \"shishegar\",\r\n    \"username\": \"majidsh\",\r\n    \"email\": \"majidshishegar0@gmail.com\",\r\n    \"mobile\": \"09174835099\",\r\n    \"password\": \"1234\",\r\n    \"is_active\": true,\r\n    \"access_id\": null\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: UserInput!) {\r\n  result: updateUser(id: $id, input: $input) {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"607335ef0728bc3674eb3d28\",\r\n  \"input\": {\r\n    \"name\": \"new name\",\r\n    \"last_name\": \"new last name\",\r\n    \"username\": \"newUsername\",\r\n    \"email\": \"new_email@gmail.com\",\r\n    \"mobile\": \"09174835099\",\r\n    \"password\": \"1234\",\r\n    \"is_active\": false,\r\n    \"access_id\": null\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateUserInformation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: UserInformationInput!) {\r\n  result: updateUserInformation(id: $id, input: $input) {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"6087fece356ce6050eba59b8\",\r\n  \"input\": {\r\n    \"phone\": \"12345678901\",\r\n    \"gender\": 2,\r\n    \"media\": {\r\n        \"media_id\": \"\",\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteUser(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6061bcb7594b290dd0b108e1\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "changePasswordUser",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: changePasswordUserInput!) {\r\n  result: changePasswordUser(id: $id, input: $input) {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        user_information {\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            address_ids\r\n            phone\r\n            gender\r\n\r\n            # addresses\r\n        }\r\n        # role\r\n        # roleAccessControlLists\r\n        # panel\r\n        # panelAccessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n\r\n        # transactions\r\n        # complete_orders\r\n        # cart\r\n        # tutorials\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"60819936f1eba32e00a66dde\",\r\n  \"input\": {\r\n    \"password\": \"1234\",\r\n    \"password_confirmation\": \"1234\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FieldValidation",
			"item": [
				{
					"name": "getFieldValidation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n    result: getFieldValidation(id: $id) {\r\n        id\r\n        title\r\n        validation_rule\r\n        createdAt\r\n        updatedAt\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"60b8b0ca4f62bc2004b24cba\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFieldValidations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: FieldValidationFilter) {\r\n  result: getFieldValidations(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        validation_rule\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllFieldValidations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: FieldValidationFilter) {\r\n    result: getAllFieldValidations(filter: $filter) {\r\n        id\r\n        title\r\n        validation_rule\r\n        createdAt\r\n        updatedAt\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createFieldValidation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: FieldValidationInput!) {\r\n    result: createFieldValidation(input: $input) {\r\n        id\r\n        title\r\n        validation_rule\r\n        createdAt\r\n        updatedAt\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": \"required\",\r\n    \"validation_rule\": \"required\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateFieldValidation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: FieldValidationInput!) {\r\n    result: updateFieldValidation(id: $id, input: $input) {\r\n        id\r\n        title\r\n        validation_rule\r\n        createdAt\r\n        updatedAt\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"60be0abe4ee6c12ce85ee0f8\",\r\n  \"input\": {\r\n    \"title\": \"justthis\",\r\n    \"validation_rule\": \"regex:^justthis$\"\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFieldValidation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteFieldValidation(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60b7d5500096860c40572730\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Form",
			"item": [
				{
					"name": "getForm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getForm(id: $id) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    name\r\n    fields {\r\n        field_type_id\r\n        label # multi language\r\n        label_panel\r\n        label_web\r\n        name\r\n        size\r\n        default_value\r\n        data {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            id\r\n        }\r\n\r\n        # field_type\r\n        # field_validations\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608fe4da1bc1c70cc09e70b7\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getForms",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: FormFilter) {\r\n  result: getForms(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        name\r\n        fields {\r\n            field_type_id\r\n            label # multi language\r\n            label_panel\r\n            label_web\r\n            name\r\n            size\r\n            default_value\r\n            data {\r\n                name # multi language\r\n                name_panel\r\n                name_web\r\n                id\r\n            }\r\n\r\n            # field_type\r\n            # field_validations\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllForms",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: FormFilter) {\r\n    result: getAllForms(filter: $filter) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        name\r\n        fields {\r\n            field_type_id\r\n            label # multi language\r\n            label_panel\r\n            label_web\r\n            name\r\n            size\r\n            default_value\r\n            data {\r\n                name # multi language\r\n                name_panel\r\n                name_web\r\n                id\r\n            }\r\n\r\n            # field_type\r\n            # field_validations\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createForm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: FormInput!) {\r\n    result: createForm(input: $input) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        name\r\n        fields {\r\n            field_type_id\r\n            label # multi language\r\n            label_panel\r\n            label_web\r\n            name\r\n            size\r\n            default_value\r\n            data {\r\n                name # multi language\r\n                name_panel\r\n                name_web\r\n                id\r\n            }\r\n\r\n            # field_type\r\n            # field_validations\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"فرم مشخصات فردی\"\r\n    },\r\n    \"name\": \"form name\",\r\n    \"fields\": [\r\n        {\r\n            \"label\": {\r\n                \"fa\": \"نام\"\r\n            },\r\n            \"name\": \"name\",\r\n            \"size\": 6,\r\n            \"data\": [],\r\n            \"field_type_id\": \"60be2242b67b40314cc63fda\",\r\n            \"field_validation_ids\":[\r\n                \"60be1c62b67b40314cc63fd0\"            ]\r\n        },\r\n        {\r\n            \"label\": {\r\n                \"fa\": \"شماره تلفن\"\r\n            },\r\n            \"name\": \"tel_number\",\r\n            \"size\": 6,\r\n            \"data\": [],\r\n            \"field_type_id\": \"60be2242b67b40314cc63fda\",\r\n            \"field_validation_ids\":[\r\n                \"60be1c62b67b40314cc63fd0\"\r\n            ]\r\n        },\r\n        {\r\n            \"label\": {\r\n                \"fa\": \"تحصیلات\"\r\n            },\r\n            \"name\": \"grade\",\r\n            \"size\": 12,\r\n            \"data\": [\r\n                {\r\n                    \"name\": {\r\n                        \"fa\": \"دیپلم\"\r\n                    },\r\n                    \"id\": \"1\"\r\n                },\r\n                {\r\n                    \"name\": {\r\n                        \"fa\": \"کارشناسی\"\r\n                    },\r\n                    \"id\": \"2\"\r\n                },\r\n                {\r\n                    \"name\": {\r\n                        \"fa\": \"کارشناسی ارشد\"\r\n                    },\r\n                    \"id\": \"3\"\r\n                }\r\n            ],\r\n            \"field_type_id\": \"60be2242b67b40314cc63fda\",\r\n            \"field_validation_ids\":[\r\n                \"60be1c62b67b40314cc63fd0\",\r\n                \"60be1daab67b40314cc63fd2\"\r\n            ]\r\n        }\r\n    ]\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateForm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: FormInput!) {\r\n    result: updateForm(id: $id, input: $input) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        name\r\n        fields {\r\n            field_type_id\r\n            label # multi language\r\n            label_panel\r\n            label_web\r\n            name\r\n            size\r\n            default_value\r\n            data {\r\n                name # multi language\r\n                name_panel\r\n                name_web\r\n                id\r\n            }\r\n\r\n            # field_type\r\n            # field_validations\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"id\": \"60be240bb67b40314cc63fe0\",\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"فرم جدید مشخصات فردی\"\r\n        },\r\n        \"name\": \"changed form name\",\r\n        \"fields\": [\r\n            {\r\n                \"label\": {\r\n                    \"fa\": \"نام خانوادگی\"\r\n                },\r\n                \"name\": \"family\",\r\n                \"size\": 12,\r\n                \"data\": [],\r\n                \"field_type_id\": \"60be2242b67b40314cc63fda\",\r\n                \"field_validation_ids\":[\r\n                    \"60be1c62b67b40314cc63fd0\"\r\n                ]\r\n            },\r\n            {\r\n                \"label\": {\r\n                    \"fa\": \"شماره موبایل\"\r\n                },\r\n                \"name\": \"mobile\",\r\n                \"size\": 12,\r\n                \"data\": [],\r\n                \"field_type_id\": \"60be2242b67b40314cc63fda\",\r\n                \"field_validation_ids\":[\r\n                    \"60be1c62b67b40314cc63fd0\"\r\n                ]\r\n            },{\r\n                \"field_type_id\": \"60c1dcedf941643bec1bce95\",\r\n                \"label\": {\r\n                    \"fa\": \"کالری تصاویر\"\r\n                },\r\n                \"name\": \"images\",\r\n                \"size\": 12,\r\n                \"data\": [],\r\n                \"field_validation_ids\":[\r\n                   \"60be1c62b67b40314cc63fd0\"\r\n                ]\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteForm",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteForm(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60b7d5500096860c40572730\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FieldType",
			"item": [
				{
					"name": "getFieldType",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n    result: getFieldType(id: $id) {\r\n        id\r\n        title\r\n        type\r\n        has_data\r\n        field_validation_ids\r\n        createdAt\r\n        updatedAt\r\n\r\n        # field_validations\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"60b8b0ca4f62bc2004b24cba\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFieldTypes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: FieldTypeFilter) {\r\n  result: getFieldTypes(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        type\r\n        has_data\r\n        field_validation_ids\r\n        createdAt\r\n        updatedAt\r\n\r\n        # field_validations\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllFieldTypes",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: FieldTypeFilter) {\r\n    result: getAllFieldTypes(filter: $filter) {\r\n        id\r\n        title\r\n        type\r\n        has_data\r\n        field_validation_ids\r\n        createdAt\r\n        updatedAt\r\n\r\n        # field_validations\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createFieldType",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: FieldTypeInput!) {\r\n    result: createFieldType(input: $input) {\r\n        id\r\n        title\r\n        type\r\n        has_data\r\n        field_validation_ids\r\n        createdAt\r\n        updatedAt\r\n\r\n        # field_validations\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": \"متن کوتاه\",\r\n    \"type\": \"text\",\r\n    \"has_data\": false,\r\n    \"field_validation_ids\": [\r\n        \"60be1c62b67b40314cc63fd0\",\r\n        \"60be1daab67b40314cc63fd2\",\r\n        \"60be2039b67b40314cc63fd7\"\r\n    ]\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateFieldType",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: FieldTypeInput!) {\r\n    result: updateFieldType(id: $id, input: $input) {\r\n        id\r\n        title\r\n        type\r\n        has_data\r\n        field_validation_ids\r\n        createdAt\r\n        updatedAt\r\n\r\n        # field_validations\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"60be0b904ee6c12ce85ee100\",\r\n  \"input\": {\r\n    \"title\": \"انتخابی\",\r\n    \"type\": \"select\",\r\n    \"has_data\": true,\r\n    \"field_validation_ids\": [\r\n        \"60be0abe4ee6c12ce85ee0f8\"\r\n    ]\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFieldType",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteFieldType(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60b7d5500096860c40572730\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FormValue",
			"item": [
				{
					"name": "getFormValue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getFormValue(id: $id) {\r\n    id\r\n    form_id\r\n    user_id\r\n    fields\r\n    createdAt\r\n    updatedAt\r\n\r\n    # form\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608fe4da1bc1c70cc09e70b7\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFormValues",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: FormValueFilter) {\r\n  result: getFormValues(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        form_id\r\n        user_id\r\n        fields\r\n        createdAt\r\n        updatedAt\r\n\r\n        # form\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSelfFormValues",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: FormValueFilter) {\r\n  result: getSelfFormValues(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        form_id\r\n        user_id\r\n        fields\r\n        createdAt\r\n        updatedAt\r\n\r\n        # form\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllFormValues",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: FormValueFilter) {\r\n    result: getAllFormValues(filter: $filter) {\r\n        id\r\n        form_id\r\n        user_id\r\n        fields\r\n        createdAt\r\n        updatedAt\r\n\r\n        # form\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createFormValue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($form_id:ID!, $input: JSON!) {\r\n    result: createFormValue(form_id:$form_id, input: $input) {\r\n        id\r\n        form_id\r\n        user_id\r\n        fields\r\n        createdAt\r\n        updatedAt\r\n\r\n        # form\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"form_id\": \"60dc24810a477c30d43c3ca9\",\r\n    \"input\": {\r\n        \"email\": \"shishegar@gmail.com\",\r\n        \"mobile\": \"09174835099\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateFormValue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: JSON!) {\r\n    result: updateFormValue(id: $id, input: $input) {\r\n        id\r\n        form_id\r\n        user_id\r\n        fields\r\n        createdAt\r\n        updatedAt\r\n\r\n        # form\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n    \"id\": \"60c1e10958a4e81114ce7589\",\r\n    \"input\": {\r\n        \"family\": \"changed family\",\r\n        \"mobile\": \"1234\",\r\n        \"images\":[\r\n            {\r\n                \"media_id\": \"60bf64229d3e2204284a8b94\",\r\n                \"sort\": 10,\r\n                \"main\": true,\r\n                \"alt\": \"new alt text\",\r\n                \"url\": \"some/url\"\r\n            }, {\r\n                \"media_id\": \"60bf64ff9d3e2204284a8b95\",\r\n                \"sort\": 11,\r\n                \"main\": false,\r\n                \"alt\": \"some alt text\",\r\n                \"url\": \"some/url\"\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteFormValue",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteFormValue(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60b7d5500096860c40572730\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FormBuilder",
			"item": [
				{
					"name": "getCreateFormBuillder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($form_id: ID!) {\r\n  result: getCreateFormBuilder(form_id: $form_id)\r\n}",
								"variables": "{\r\n  \"form_id\": \"60be240bb67b40314cc63fe0\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getEditFormBuillder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($form_value_id: ID!) {\r\n  result: getEditFormBuilder(form_value_id: $form_value_id)\r\n}",
								"variables": "{\r\n  \"form_value_id\": \"60b9dfbe84c93234a0598dcf\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "FormValueReport",
			"item": [
				{
					"name": "getFormValueReportFields",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($collections:FormValueReportCollectionInput){\r\n  result: getFormValueReportFields(collections: $collections)\r\n}\r\n",
								"variables": "{\r\n    \"collections\": {\r\n        \"form_ids\": [],\r\n        \"category_ids\": [\"60c4c5b6c02da000098270d7\"],\r\n        \"tag_ids\": [],\r\n        \"tag_group_ids\": [\r\n            \"60c5b2226887200c1c871a18\"\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getFormValueReport",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($collections:FormValueReportCollectionInput, $sort_fields: [FormValueReportSortInput], $fields:[String], $filter:JSON){\r\n  result: getFormValueReport(collections: $collections, sort_fields: $sort_fields, fields: $fields, filter: $filter)\r\n}\r\n",
								"variables": "{\r\n    \"collections\": {\r\n        \"form_ids\": [],\r\n        \"category_ids\": [\r\n            \"60be240bb67b40314cc63fe0\"\r\n        ],\r\n        \"tag_ids\": [],\r\n        \"tag_group_ids\": []\r\n    },\r\n    \"sort_fields\": [\r\n        {\r\n            \"field\": \"mobile\",\r\n            \"desc\": false\r\n        }\r\n    ],\r\n    \"fields\": [\r\n        \"mobile\"\r\n    ],\r\n    \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CRM",
			"item": [
				{
					"name": "sendSMS",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SendSMSInput) {\r\n  result: sendSMS(input: $input){\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"title\",\r\n        \"message\": \"message to send\",\r\n        \"send_to\": [\r\n            {\r\n                \"receiver_user_id\": \"60d32cd1fca08a1b6c79ce81\",\r\n                \"receiver_value\": null\r\n            },\r\n            {\r\n                \"receiver_user_id\": null,\r\n                \"receiver_value\": \"09174835099\"\r\n            }\r\n        ],\r\n        \"date\": \"1624520558219\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendEmail",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SendEmailInput) {\r\n  result: sendEmail(input: $input){\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"title\",\r\n        \"message\": \"message to send\",\r\n        \"send_to\": [\r\n            {\r\n                \"receiver_user_id\": \"60d32cd1fca08a1b6c79ce81\",\r\n                \"receiver_value\": null\r\n            },\r\n            {\r\n                \"receiver_user_id\": null,\r\n                \"receiver_value\": \"majidshishegar0@gmail.com\"\r\n            }\r\n        ],\r\n        \"date\": \"1624520558219\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendPushNotification",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SendPushNotificationInput) {\r\n  result: sendPushNotification(input: $input){\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"title\",\r\n        \"message\": \"message to send\",\r\n        \"link\": \"https://google.com\",\r\n        \"send_to\": [\r\n            {\r\n                \"receiver_user_id\": \"60d32cd1fca08a1b6c79ce81\"\r\n            }\r\n        ],\r\n        \"date\": \"1624520558219\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendPopup",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SendPopupInput) {\r\n  result: sendPopup(input: $input){\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"title\",\r\n        \"message\": \"message to send\",\r\n        \"link\": \"https://google.com\",\r\n        \"send_to\": [\r\n            {\r\n                \"receiver_user_id\": \"60d32cd1fca08a1b6c79ce81\"\r\n            }\r\n        ],\r\n        \"date\": \"1624520558219\",\r\n        \"view_count\": 5\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendInternalMessage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SendInternalMessageInput) {\r\n  result: sendInternalMessage(input: $input){\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"title\",\r\n        \"message\": \"message to send\",\r\n        \"send_to\": [\r\n            {\r\n                \"receiver_user_id\": \"60d32cd1fca08a1b6c79ce81\"\r\n            }\r\n        ],\r\n        \"date\": \"1624520558219\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendExternalMessage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SendExternalMessageInput) {\r\n  result: sendExternalMessage(input: $input) {\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"title\",\r\n        \"message\": \"message to send\",\r\n        \"kind\": 1,\r\n        \"status\": 1,\r\n        \"send_to\": [\r\n            {\r\n                \"receiver_user_id\": \"60d32cd1fca08a1b6c79ce81\",\r\n                \"receiver_value\": \"some string\",\r\n                \"seen\": 1\r\n            }\r\n        ],\r\n        \"date\": \"1624520558219\",\r\n        \"response\": {\r\n            \"some\": {\r\n                \"custom\": \"object\"\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCRM",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getCRM(id: $id) {\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"60d32cd1fca08a1b6c79ce81\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCRMs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CRMFilter) {\r\n  result: getCRMs(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllCRMs",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CRMFilter) {\r\n    result: getAllCRMs(filter: $filter) {\r\n        id\r\n        title\r\n        message\r\n        type # {sms: 1,email: 2,push_notification: 3,popup: 4,internal_message: 5,external_message: 6}\r\n        kind # integer\r\n        send_to {\r\n            receiver_user_id\r\n            receiver_value\r\n            seen\r\n\r\n            # receiver_user\r\n        }\r\n        status #[pending:1,success:2,reject:3]\r\n        response\r\n        date\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCRM",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteCRM(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60873fceea04282744e07f0d\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Reminders",
			"item": [
				{
					"name": "getReminder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getReminder(id: $id) {\r\n    id\r\n    title\r\n    description\r\n    start_date\r\n    end_date\r\n    user_id\r\n    access_user_ids\r\n    type\r\n    can_edit\r\n    is_owner\r\n    editable\r\n    createdAt\r\n    updatedAt\r\n    \r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"607f107291e259361499c0d8\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getReminders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: ReminderFilter) {\r\n  result: getReminders(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        description\r\n        start_date\r\n        end_date\r\n        user_id\r\n        access_user_ids\r\n        type\r\n        can_edit\r\n        is_owner\r\n        editable\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllReminders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: ReminderFilter) {\r\n  result: getAllReminders(filter: $filter) {\r\n        id\r\n        title\r\n        description\r\n        start_date\r\n        end_date\r\n        user_id\r\n        access_user_ids\r\n        type\r\n        can_edit\r\n        is_owner\r\n        editable\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllSelfReminders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: ReminderFilter) {\r\n  result: getAllSelfReminders(filter: $filter) {\r\n        id\r\n        title\r\n        description\r\n        start_date\r\n        end_date\r\n        user_id\r\n        access_user_ids\r\n        type\r\n        can_edit\r\n        is_owner\r\n        editable\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRangeSelfReminders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($date_start: String, $date_end: String, $type:Int) {\r\n  result: getRangeSelfReminders(date_start: $date_start, date_end:$date_end,type:$type) {\r\n        id\r\n        title\r\n        description\r\n        start_date\r\n        end_date\r\n        user_id\r\n        access_user_ids\r\n        type\r\n        can_edit\r\n        is_owner\r\n        editable\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"date_start\": \"1624980283919\",\r\n  \"date_end\": \"1624980283921\",\r\n  \"type\": 0\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRangeEvents",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($date_start: String, $date_end: String,$types:[Int]) {\r\n  result: getRangeCalenderEvents(date_start: $date_start, date_end:$date_end, types:$types) {\r\n        title\r\n        type\r\n        type_title # multi language\r\n        type_title_panel\r\n        type_title_web\r\n        holiday\r\n        month\r\n        jMonth\r\n        day\r\n        jDay\r\n        date\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"date_start\": \"1628623800000\",\r\n  \"date_end\": \"1628710199000\",\r\n  \"types\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createReminder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: ReminderInput!) {\r\n  result: createReminder(input: $input) {\r\n        id\r\n        title\r\n        description\r\n        start_date\r\n        end_date\r\n        user_id\r\n        access_user_ids\r\n        type\r\n        can_edit\r\n        is_owner\r\n        editable\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": \"remind me\",\r\n    \"description\": \"remind me make coffee...\",\r\n    \"start_date\": \"1624980283920\",\r\n    \"end_date\": \"1624980283920\",\r\n    \"for_every_one\": true,\r\n    \"type\": 0,\r\n    \"can_edit\": 1\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateReminder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: ReminderInput!) {\r\n  result: updateReminder(id: $id, input: $input) {\r\n        id\r\n        title\r\n        description\r\n        start_date\r\n        end_date\r\n        user_id\r\n        access_user_ids\r\n        type\r\n        can_edit\r\n        is_owner\r\n        editable\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"60c4640790fbba092471a59e\",\r\n  \"input\": {\r\n    \"title\": \"remind me\",\r\n    \"description\": \"remind me make coffee...\",\r\n    \"start_date\": \"1624980283920\",\r\n    \"end_date\": \"1624980283920\",\r\n    \"for_every_one\": true,\r\n    \"type\": 0,\r\n    \"can_edit\": 1\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteReminder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteReminder(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60873fceea04282744e07f0d\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Badge",
			"item": [
				{
					"name": "getBadges",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query ($keys: [String]){\r\n  result: getBadges(keys: $keys)\r\n}\r\n",
								"variables": "{\r\n    \"keys\": [\r\n        \"calender_reminder_badge\"\r\n    ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "tt",
			"item": [
				{
					"name": "tt",
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{url}}/api/tt",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"tt"
							]
						}
					},
					"response": []
				},
				{
					"name": "ttcallback",
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {
							"content-type": true
						}
					},
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/x-www-form-urlencoded",
								"type": "text"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "key",
									"value": "value",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "{{url}}/api/ttcallback",
							"host": [
								"{{url}}"
							],
							"path": [
								"api",
								"ttcallback"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Setting",
			"item": [
				{
					"name": "getSettingByKey",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($key: String!) {\r\n  result: getSettingByKey(key: $key) {\r\n    id\r\n    name # multi language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n    is_main\r\n    value\r\n    user_id\r\n\r\n    parsed_value\r\n    extra_data\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"key\": \"available_payment_gateways\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSetting",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getSetting(id: $id) {\r\n    id\r\n    name # multi language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n    is_main\r\n    value\r\n    user_id\r\n\r\n    parsed_value\r\n    extra_data\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60fe6967f1803e21e7707f79\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: SettingFilter) {\r\n  result: getSettings(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        name # multi language\r\n        name_panel\r\n        name_web\r\n        key\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n        is_main\r\n        value\r\n        user_id\r\n\r\n        parsed_value\r\n        extra_data\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllSettings",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: SettingFilter) {\r\n  result: getAllSettings(filter: $filter) {\r\n        id\r\n        name # multi language\r\n        name_panel\r\n        name_web\r\n        key\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n        is_main\r\n        value\r\n        user_id\r\n\r\n        parsed_value\r\n        extra_data\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllSettingGroups",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  result: getAllSettingGroups\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createSetting",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SettingInput!) {\r\n    result: createSetting(input: $input) {\r\n        id\r\n        name # multi language\r\n        name_panel\r\n        name_web\r\n        key\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n        is_main\r\n        value\r\n        user_id\r\n\r\n        parsed_value\r\n        extra_data\r\n\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n      \"name\": {\r\n          \"fa\": \"name\"\r\n      },\r\n      \"key\": \"some_key\",\r\n      \"description\": {\r\n          \"fa\": \"description about this setting\"\r\n      },\r\n      \"format\": 1,\r\n      \"value\": {\"some\":\"Object\"}\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSetting",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: SettingInput!) {\r\n    result: updateSetting(id: $id, input: $input) {\r\n        id\r\n        name # multi language\r\n        name_panel\r\n        name_web\r\n        key\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n        is_main\r\n        value\r\n        user_id\r\n\r\n        parsed_value\r\n        extra_data\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"60fe6720318a321dcd5bfbc3\",\r\n  \"input\": {\r\n      \"name\": {\r\n          \"fa\": \"changed name\"\r\n      },\r\n      \"key\": \"changed_key\",\r\n      \"description\": {\r\n          \"fa\": \"changed description about this setting\"\r\n      },\r\n      \"format\": 2,\r\n      \"value\": [\"some\",\"array\"]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSettingByKey",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($key: String, $input: SettingInput!) {\r\n    result: updateSettingByKey(key: $key, input: $input) {\r\n        id\r\n        name # multi language\r\n        name_panel\r\n        name_web\r\n        key\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        format # [\"object\":1, \"array\":2, \"string\":3, \"big_text\":4, \"integer\":5, \"bool\":6, \"float\":7]\r\n        is_main\r\n        value\r\n        user_id\r\n\r\n        parsed_value\r\n        extra_data\r\n\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"key\": \"some_key\",\r\n  \"input\": {\r\n      \"name\": {\r\n          \"fa\": \"changed name\"\r\n      },\r\n      \"description\": {\r\n          \"fa\": \"changed description about this setting\"\r\n      },\r\n      \"format\": 2,\r\n      \"value\": [\"some\",\"array\"]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteSetting",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteSetting(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Address",
			"item": [
				{
					"name": "getAddress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getAddress(id: $id) {\r\n    id\r\n    tilte\r\n    postal_code\r\n    city_id\r\n    state_id\r\n    address\r\n    location\r\n    is_default\r\n    model_name\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    city {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n        slug\r\n        state_id\r\n\r\n        state {\r\n            id\r\n            name\r\n            name_panel\r\n            name_web\r\n        }\r\n    }\r\n\r\n    state {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6110cb5bf6d3931b3a9d43fe\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAddresses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: AddressFilter) {\r\n  result: getAddresses(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        tilte\r\n        postal_code\r\n        city_id\r\n        state_id\r\n        address\r\n        location\r\n        is_default\r\n        model_name\r\n        model_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        city {\r\n            id\r\n            name\r\n            name_panel\r\n            name_web\r\n            slug\r\n            state_id\r\n\r\n            state {\r\n                id\r\n                name\r\n                name_panel\r\n                name_web\r\n            }\r\n        }\r\n\r\n        state {\r\n            id\r\n            name\r\n            name_panel\r\n            name_web\r\n        }\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllAddresses",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: AddressFilter) {\r\n  result: getAllAddresses (filter: $filter) {\r\n    id\r\n    tilte\r\n    postal_code\r\n    city_id\r\n    state_id\r\n    address\r\n    location\r\n    is_default\r\n    model_name\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    city {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n        slug\r\n        state_id\r\n\r\n        state {\r\n            id\r\n            name\r\n            name_panel\r\n            name_web\r\n        }\r\n    }\r\n\r\n    state {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createUserAddress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: UserAddressInput!) {\r\n  result: createUserAddress(input: $input) {\r\n    id\r\n    tilte\r\n    postal_code\r\n    city_id\r\n    state_id\r\n    address\r\n    location\r\n    is_default\r\n    model_name\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    city {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n        slug\r\n        state_id\r\n\r\n        state {\r\n            id\r\n            name\r\n            name_panel\r\n            name_web\r\n        }\r\n    }\r\n\r\n    state {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"610fd5f65a220c6b6d294b91\",\r\n    \"input\": {\r\n        \"title\": \"title of address\",\r\n        \"postal_code\": \"1234567890\",\r\n        \"city_id\": 1,\r\n        \"state_id\": 1,\r\n        \"address\": \"continue ...\",\r\n        \"location\": {\"lat\":53,\"lon\":43},\r\n        \"is_default\": false,\r\n        \"user_id\": \"60843039101d562490e0b2e7\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateAddress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: AddressInput!) {\r\n  result: updateAddress(id: $id, input: $input) {\r\n    id\r\n    tilte\r\n    postal_code\r\n    city_id\r\n    state_id\r\n    address\r\n    location\r\n    is_default\r\n    model_name\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    city {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n        slug\r\n        state_id\r\n\r\n        state {\r\n            id\r\n            name\r\n            name_panel\r\n            name_web\r\n        }\r\n    }\r\n\r\n    state {\r\n        id\r\n        name\r\n        name_panel\r\n        name_web\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"610fd5f65a220c6b6d294b91\",\r\n    \"input\": {\r\n        \"title\": \"changed title of address\",\r\n        \"postal_code\": \"1234567890\",\r\n        \"city\": \"tehran\",\r\n        \"state\": \"tehran\",\r\n        \"address\": \"continue\",\r\n        \"location\": {\"lat\":53,\"lon\":43},\r\n        \"is_default\": false\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAddress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteAddress(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6112948dc810db358ad78864\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Comment",
			"item": [
				{
					"name": "getComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getComment(id: $id) {\r\n    id\r\n    title\r\n    text\r\n    confirmed\r\n    reply_to_id\r\n    user_id\r\n    model_name\r\n    model_type\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # reply_to\r\n    # replies\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611cdba8dc5d92532a03bb7c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getComments",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CommentFilter) {\r\n  result: getComments(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        text\r\n        confirmed\r\n        reply_to_id\r\n        user_id\r\n        model_name\r\n        model_type\r\n        model_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # reply_to\r\n        # replies\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllComments",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CommentFilter) {\r\n  result: getAllComments (filter: $filter) {\r\n    id\r\n    title\r\n    text\r\n    confirmed\r\n    reply_to_id\r\n    user_id\r\n    model_name\r\n    model_type\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # reply_to\r\n    # replies\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CreateCommentInput!) {\r\n  result: createComment(input: $input) {\r\n    id\r\n    title\r\n    text\r\n    confirmed\r\n    reply_to_id\r\n    user_id\r\n    model_name\r\n    model_type\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # reply_to\r\n    # replies\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": \"comment title\",\r\n        \"text\": \"text of comment\",\r\n        \"model_type\": 1,\r\n        \"model_id\": \"610e55992c453230cdcacfeb\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: UpdateCommentInput!) {\r\n  result: updateComment(id: $id, input: $input) {\r\n    id\r\n    title\r\n    text\r\n    confirmed\r\n    reply_to_id\r\n    user_id\r\n    model_name\r\n    model_type\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # reply_to\r\n    # replies\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"611cdbbddc5d92532a03bb87\",\r\n    \"input\": {\r\n        \"title\": \"changed comment title\",\r\n        \"text\": \"changed text of comment\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteAddress",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteComment(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6112948dc810db358ad78864\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "replyComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($reply_to_id: ID!,$input: CommentInput) {\r\n  result: replyComment(reply_to_id: $reply_to_id,input: $input) {\r\n    id\r\n    title\r\n    text\r\n    confirmed\r\n    reply_to_id\r\n    user_id\r\n    model_name\r\n    model_type\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # reply_to\r\n    # replies\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"reply_to_id\": \"611cfe6adddc1174a51ebbb7\",\r\n    \"input\": {\r\n        \"title\": \"reply title\",\r\n        \"text\": \"text of reply\"\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setConfirmComment",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $confirmed: Boolean) {\r\n  result: setConfirmComment(id: $id, confirmed: $confirmed) {\r\n    id\r\n    title\r\n    text\r\n    confirmed\r\n    reply_to_id\r\n    user_id\r\n    model_name\r\n    model_type\r\n    model_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # reply_to\r\n    # replies\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"611cdbbddc5d92532a03bb87\",\r\n    \"confirmed\": true\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Deputation",
			"item": [
				{
					"name": "getDeputation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getDeputation(id: $id) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    state_id\r\n    city_id\r\n    address # mulit language\r\n    address_panel\r\n    address_web\r\n    postal_code\r\n    location\r\n    label # mulit language\r\n    label_panel\r\n    label_web\r\n    cellphone\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    # state\r\n    # city\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611ec604738a33d5d946167b\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDeputations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: DeputationFilter) {\r\n  result: getDeputations(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        state_id\r\n        city_id\r\n        address # mulit language\r\n        address_panel\r\n        address_web\r\n        postal_code\r\n        location\r\n        label # mulit language\r\n        label_panel\r\n        label_web\r\n        cellphone\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        # state\r\n        # city\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllDeputations",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: DeputationFilter) {\r\n  result: getAllDeputations(filter: $filter) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    state_id\r\n    city_id\r\n    address # mulit language\r\n    address_panel\r\n    address_web\r\n    postal_code\r\n    location\r\n    label # mulit language\r\n    label_panel\r\n    label_web\r\n    cellphone\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    # state\r\n    # city\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createDeputation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: DeputationInput!) {\r\n  result: createDeputation(input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    state_id\r\n    city_id\r\n    address # mulit language\r\n    address_panel\r\n    address_web\r\n    postal_code\r\n    location\r\n    label # mulit language\r\n    label_panel\r\n    label_web\r\n    cellphone\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    # state\r\n    # city\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n      \"title\": {\r\n          \"fa\": \"title\"\r\n      },\r\n      \"description\": {\r\n          \"fa\": \"description\"\r\n      },\r\n      \"state_id\": 1,\r\n      \"city_id\": 1,\r\n      \"address\": {\r\n          \"fa\": \"address\"\r\n      },\r\n      \"postal_code\": \"0123456789\",\r\n      \"location\": {\"lat\":0,\"lon\":0},\r\n      \"label\": {\r\n          \"fa\": \"label\"\r\n      },\r\n      \"cellphone\": \"09174835099\",\r\n      \"media_gallery\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"sort\": 1,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60af56f53562bc1ea04e8c85\",\r\n                \"sort\": 3,\r\n                \"main\": true,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            },\r\n            {\r\n                \"media_id\": \"60a892369294261c6c01e5dc\",\r\n                \"sort\": 2,\r\n                \"main\": false,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\"\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateDeputation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: DeputationInput!) {\r\n  result: updateDeputation(id: $id, input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    state_id\r\n    city_id\r\n    address # mulit language\r\n    address_panel\r\n    address_web\r\n    postal_code\r\n    location\r\n    label # mulit language\r\n    label_panel\r\n    label_web\r\n    cellphone\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    media_gallery {\r\n        media_id\r\n        main\r\n        alt\r\n        url\r\n        \r\n        # media\r\n    }\r\n    # state\r\n    # city\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611ec604738a33d5d946167b\",\r\n  \"input\": {\r\n      \"title\": {\r\n          \"fa\": \"title\",\r\n          \"en\": \"title\"\r\n      },\r\n      \"description\": {\r\n          \"fa\": \"description\",\r\n          \"en\": \"description\"\r\n      },\r\n      \"state_id\": 1,\r\n      \"city_id\": 1,\r\n      \"address\": {\r\n          \"fa\": \"address\"\r\n      },\r\n      \"postal_code\": \"0123456789\",\r\n      \"location\": {\"lat\":0,\"lon\":0},\r\n      \"label\": {\r\n          \"fa\": \"label\"\r\n      },\r\n      \"cellphone\": \"09174835099\",\r\n      \"media_gallery\": [\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteDeputation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteDeputation(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611ec604738a33d5d946167b\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Slider",
			"item": [
				{
					"name": "getSlider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getSlider(id: $id) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6167e6142ed061315766a09b\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getSliders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: SliderFilter) {\r\n  result: getSliders(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        name # mulit language\r\n        name_panel\r\n        name_web\r\n        key\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n        status\r\n        images {\r\n            id\r\n            media_id\r\n            sort\r\n            alt\r\n            url\r\n\r\n            title # mulit language\r\n            title_panel\r\n            title_web\r\n            link\r\n            description # mulit language\r\n            description_panel\r\n            description_web\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllSliders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: SliderFilter) {\r\n  result: getAllSliders(filter: $filter) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createSlider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: SliderInput!) {\r\n  result: createSlider(input: $input) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n      \"name\": {\r\n          \"fa\": \"name\",\r\n          \"en\": \"name\"\r\n      },\r\n      \"key\": \"slider_1\",\r\n      \"description\": {\r\n          \"fa\": \"description\"\r\n      },\r\n      \"status\": 1,\r\n      \"images\": [\r\n            {\r\n                \"media_id\": \"6106943036bebf796ec67998\",\r\n                \"sort\": 1,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\",\r\n                \"title\":{\r\n                    \"fa\": \"title\",\r\n                    \"en\": \"title\"\r\n                },\r\n                \"link\": \"http://www.google.com\",\r\n                \"description\": {\r\n                    \"fa\": \"description of slider\",\r\n                    \"en\": \"description of slider\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSlider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: SliderInput!) {\r\n  result: updateSlider(id: $id, input: $input) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611ec604738a33d5d946167b\",\r\n  \"input\": {\r\n      \"name\": {\r\n          \"fa\": \"name\"\r\n      },\r\n      \"key\": \"slider_1\",\r\n      \"description\": {\r\n          \"fa\": \"description\"\r\n      },\r\n      \"status\": 1,\r\n      \"images\": [\r\n            {\r\n                \"media_id\": \"60a7811cbcfafe0c5c3c0320\",\r\n                \"sort\": 1,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"urlOfMedia\",\r\n                \"title\":{\r\n                    \"fa\": \"title\"\r\n                },\r\n                \"link\": \"http://www.google.com\",\r\n                \"description\": {\r\n                    \"fa\": \"description of slider\"\r\n                }\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteSlider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteSlider(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611ec604738a33d5d946167b\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setStatusSlider",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: setStatusSliderInput) {\r\n  result: setStatusSlider(id: $id, input: $input) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"611ec604738a33d5d946167b\",\r\n  \"input\": {\r\n      \"status\": 1\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "addSliderImage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: SliderImageInput) {\r\n  result: addSliderImage(id: $id, input: $input) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"6167e6142ed061315766a09b\",\r\n    \"input\": {\r\n        \"media_id\": \"6106943036bebf796ec67998\",\r\n        \"sort\": 1,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"urlOfMedia\",\r\n        \"title\":{\r\n            \"fa\": \"title\",\r\n            \"en\": \"title\"\r\n        },\r\n        \"link\": \"http://www.google.com\",\r\n        \"description\": {\r\n            \"fa\": \"description of slider\",\r\n            \"en\": \"description of slider\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateSliderImage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $image_id: ID, $input: SliderImageInput) {\r\n  result: updateSliderImage(id: $id,image_id: $image_id, input: $input) {\r\n    id\r\n    name # mulit language\r\n    name_panel\r\n    name_web\r\n    key\r\n    description # mulit language\r\n    description_panel\r\n    description_web\r\n    status\r\n    images {\r\n        id\r\n        media_id\r\n        sort\r\n        alt\r\n        url\r\n\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        link\r\n        description # mulit language\r\n        description_panel\r\n        description_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"6167e6142ed061315766a09b\",\r\n    \"image_id\": \"6167e6142ed061315766a09c\",\r\n    \"input\": {\r\n        \"media_id\": \"6106943036bebf796ec67998\",\r\n        \"sort\": 1,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"urlOfMedia\",\r\n        \"title\": {\r\n            \"fa\": \"title\",\r\n            \"en\": \"title\"\r\n        },\r\n        \"link\": \"http://www.google.com\",\r\n        \"description\": {\r\n            \"fa\": \"description of slider\",\r\n            \"en\": \"description of slider\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "removeSliderImage",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID,$image_id:ID) {\r\n  result: removeSliderImage(id: $id,image_id: $image_id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6167e6142ed061315766a09b\",\r\n  \"image_id\": \"6167e61c2ed061315766a0d0\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortSliderImages",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID,$input: [SliderImageSortInput]) {\r\n  result: sortSliderImages(id: $id,input: $input) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"6167e6142ed061315766a09b\",\r\n    \"input\": [\r\n        {\r\n            \"id\": \"6167e6142ed061315766a09c\",\r\n            \"sort\": 1\r\n        },\r\n        {\r\n            \"id\": \"6167e61c2ed061315766a0d0\",\r\n            \"sort\": 2\r\n        }\r\n    ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Order",
			"item": [
				{
					"name": "getOrder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID) {\r\n    result: getOrder(id: $id) {\r\n        id\r\n        user_id\r\n        discount_id\r\n        transaction_id\r\n        address_id\r\n        date\r\n        number\r\n        post_track_code\r\n        shipping_method_id\r\n        payment_gateway_id\r\n        type # {'cart': 1,'pre_order': 2,'complete': 3}\r\n        status # {'reject': 1,'complete': 2,'pending': 3,'packing': 4,'sending': 5}\r\n        note\r\n        products {\r\n            product_id\r\n            mix_variant_keys\r\n            count\r\n            note\r\n\r\n            # price\r\n            # product\r\n        }\r\n        createdAt\r\n        updatedAt\r\n\r\n        total_prices {\r\n            sum_product_price\r\n            sum_product_price_without_offer\r\n            total_price_with_discount\r\n            total_price_without_discount\r\n            post_price\r\n            payment_price\r\n            total_weight\r\n        }\r\n\r\n        # shipping_method\r\n        # payment_gateway\r\n        # user\r\n        # discount\r\n        # transaction\r\n        # all_transactions\r\n        # address\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"6184fc28ca63b27a569eb5fc\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getOrders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: OrderFilter) {\r\n  result: getOrders(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        user_id\r\n        discount_id\r\n        transaction_id\r\n        address_id\r\n        date\r\n        number\r\n        post_track_code\r\n        shipping_method_id\r\n        payment_gateway_id\r\n        type # {'cart': 1,'pre_order': 2,'complete': 3}\r\n        status # {'reject': 1,'complete': 2,'pending': 3,'packing': 4,'sending': 5}\r\n        note\r\n        products {\r\n            product_id\r\n            mix_variant_keys\r\n            count\r\n            note\r\n\r\n            # price\r\n            # product\r\n        }\r\n        createdAt\r\n        updatedAt\r\n\r\n        total_prices {\r\n            sum_product_price\r\n            sum_product_price_without_offer\r\n            total_price_with_discount\r\n            total_price_without_discount\r\n            post_price\r\n            payment_price\r\n            total_weight\r\n        }\r\n\r\n        # shipping_method\r\n        # payment_gateway\r\n        # user\r\n        # discount\r\n        # transaction\r\n        # all_transactions\r\n        # address\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllOrders",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: OrderFilter) {\r\n    result: getAllOrders(filter: $filter) {\r\n        id\r\n        user_id\r\n        discount_id\r\n        transaction_id\r\n        address_id\r\n        date\r\n        number\r\n        post_track_code\r\n        shipping_method_id\r\n        payment_gateway_id\r\n        type # {'cart': 1,'pre_order': 2,'complete': 3}\r\n        status # {'reject': 1,'complete': 2,'pending': 3,'packing': 4,'sending': 5}\r\n        note\r\n        products {\r\n            product_id\r\n            mix_variant_keys\r\n            count\r\n            note\r\n\r\n            # price\r\n            # product\r\n        }\r\n        createdAt\r\n        updatedAt\r\n\r\n        total_prices {\r\n            sum_product_price\r\n            sum_product_price_without_offer\r\n            total_price_with_discount\r\n            total_price_without_discount\r\n            post_price\r\n            payment_price\r\n            total_weight\r\n        }\r\n\r\n        # shipping_method\r\n        # payment_gateway\r\n        # user\r\n        # discount\r\n        # transaction\r\n        # all_transactions\r\n        # address\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setStatusOrder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: setStatusOrderInput ) {\r\n    result: setStatusOrder(id: $id, input: $input) {\r\n        id\r\n        user_id\r\n        discount_id\r\n        transaction_id\r\n        address_id\r\n        date\r\n        number\r\n        post_track_code\r\n        shipping_method_id\r\n        payment_gateway_id\r\n        type # {'cart': 1,'pre_order': 2,'complete': 3}\r\n        status # {'reject': 1,'complete': 2,'pending': 3,'packing': 4,'sending': 5}\r\n        note\r\n        products {\r\n            product_id\r\n            mix_variant_keys\r\n            count\r\n            note\r\n\r\n            # price\r\n            # product\r\n        }\r\n        createdAt\r\n        updatedAt\r\n\r\n        total_prices {\r\n            sum_product_price\r\n            sum_product_price_without_offer\r\n            total_price_with_discount\r\n            total_price_without_discount\r\n            post_price\r\n            payment_price\r\n            total_weight\r\n        }\r\n\r\n        # shipping_method\r\n        # payment_gateway\r\n        # user\r\n        # discount\r\n        # transaction\r\n        # all_transactions\r\n        # address\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": \"611ec604738a33d5d946167b\",\r\n    \"input\": {\r\n        \"status\": 2,\r\n        \"send_with\": 1 // {'dont_send': 0,'sms': 1,'email': 2}\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setPostTrackCodeOrder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: setPostTrackCodeOrderInput) {\r\n    result: setPostTrackCodeOrder(id: $id, input: $input) {\r\n        id\r\n        user_id\r\n        discount_id\r\n        transaction_id\r\n        address_id\r\n        date\r\n        number\r\n        post_track_code\r\n        shipping_method_id\r\n        payment_gateway_id\r\n        type # {'cart': 1,'pre_order': 2,'complete': 3}\r\n        status # {'reject': 1,'complete': 2,'pending': 3,'packing': 4,'sending': 5}\r\n        note\r\n        products {\r\n            product_id\r\n            mix_variant_keys\r\n            count\r\n            note\r\n\r\n            # price\r\n            # product\r\n        }\r\n        createdAt\r\n        updatedAt\r\n\r\n        total_prices {\r\n            sum_product_price\r\n            sum_product_price_without_offer\r\n            total_price_with_discount\r\n            total_price_without_discount\r\n            post_price\r\n            payment_price\r\n            total_weight\r\n        }\r\n\r\n        # shipping_method\r\n        # payment_gateway\r\n        # user\r\n        # discount\r\n        # transaction\r\n        # all_transactions\r\n        # address\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": \"611ec604738a33d5d946167b\",\r\n    \"input\": {\r\n        \"post_track_code\": \"765324543564634\",\r\n        \"send_with\": 1 // {'dont_send': 0,'sms': 1,'email': 2}\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sendCommentOrder",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: sendCommentOrderInput) {\r\n    result: sendCommentOrder(id: $id, input: $input) {\r\n        id\r\n        user_id\r\n        discount_id\r\n        transaction_id\r\n        address_id\r\n        date\r\n        number\r\n        post_track_code\r\n        shipping_method_id\r\n        payment_gateway_id\r\n        type # {'cart': 1,'pre_order': 2,'complete': 3}\r\n        status # {'reject': 1,'complete': 2,'pending': 3,'packing': 4,'sending': 5}\r\n        note\r\n        products {\r\n            product_id\r\n            mix_variant_keys\r\n            count\r\n            note\r\n\r\n            # price\r\n            # product\r\n        }\r\n        createdAt\r\n        updatedAt\r\n\r\n        total_prices {\r\n            sum_product_price\r\n            sum_product_price_without_offer\r\n            total_price_with_discount\r\n            total_price_without_discount\r\n            post_price\r\n            payment_price\r\n            total_weight\r\n        }\r\n\r\n        # shipping_method\r\n        # payment_gateway\r\n        # user\r\n        # discount\r\n        # transaction\r\n        # all_transactions\r\n        # address\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": \"611ec604738a33d5d946167b\",\r\n    \"input\": {\r\n        \"comment\": \"انبار غله خالیست.\",\r\n        \"send_with\": 1 // {'dont_send': 0,'sms': 1,'email': 2}\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Transaction",
			"item": [
				{
					"name": "getTransaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID) {\r\n    result: getTransaction(id: $id) {\r\n        id\r\n        sand_box\r\n        status\r\n        request_response\r\n        request_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        callback_response\r\n        callback_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        verify_response\r\n        verify_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        gateway\r\n        amount\r\n        description\r\n        unique_number\r\n        paidAt\r\n        verifiedAt\r\n        payment_url\r\n        tracking_code\r\n        credit_card\r\n        order_id\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # order\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"6167e6142ed061315766a09b\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTransactions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: TransactionFilter) {\r\n  result: getTransactions(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        sand_box\r\n        status\r\n        request_response\r\n        request_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        callback_response\r\n        callback_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        verify_response\r\n        verify_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        gateway\r\n        amount\r\n        description\r\n        unique_number\r\n        paidAt\r\n        verifiedAt\r\n        payment_url\r\n        tracking_code\r\n        credit_card\r\n        order_id\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # order\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllTransactions",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: TransactionFilter) {\r\n    result: getAllTransactions(filter: $filter) {\r\n        id\r\n        sand_box\r\n        status\r\n        request_response\r\n        request_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        callback_response\r\n        callback_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        verify_response\r\n        verify_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        gateway\r\n        amount\r\n        description\r\n        unique_number\r\n        paidAt\r\n        verifiedAt\r\n        payment_url\r\n        tracking_code\r\n        credit_card\r\n        order_id\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # order\r\n        # user\r\n    }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setStatusTransaction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: setStatusTransactionInput ) {\r\n    result: setStatusTransaction(id: $id, input: $input) {\r\n        id\r\n        sand_box\r\n        status\r\n        request_response\r\n        request_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        callback_response\r\n        callback_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        verify_response\r\n        verify_parsed_response {\r\n            code\r\n            message\r\n        }\r\n        gateway\r\n        amount\r\n        description\r\n        unique_number\r\n        paidAt\r\n        verifiedAt\r\n        payment_url\r\n        tracking_code\r\n        credit_card\r\n        order_id\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # order\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n    \"id\": \"611ec604738a33d5d946167b\",\r\n    \"input\": {\r\n        \"status\": 2\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Discount",
			"item": [
				{
					"name": "getDiscount",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getDiscount(id: $id) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    code\r\n    status # {'active': 1, 'inactive': 2}\r\n    type # {'percent': 1, 'amount': 2}\r\n    value\r\n    max_price\r\n    min_price\r\n    startAt\r\n    expireAt\r\n    settings {\r\n        use_limit {\r\n            type # {'user': 1, 'code': 2}\r\n            count\r\n        }\r\n        condition {\r\n            type # {'factor': 1, 'category': 2, 'brand': 3, 'campaign': 4}\r\n            values\r\n        }\r\n        access {\r\n            type # {'user': 1, 'access': 2}\r\n            values\r\n        }\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6124b2f1e07a06418611c438\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getDiscounts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: DiscountFilter) {\r\n  result: getDiscounts(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # mulit language\r\n        title_panel\r\n        title_web\r\n        code\r\n        status # {'active': 1, 'inactive': 2}\r\n        type # {'percent': 1, 'amount': 2}\r\n        value\r\n        max_price\r\n        min_price\r\n        startAt\r\n        expireAt\r\n        settings {\r\n            use_limit {\r\n                type # {'user': 1, 'code': 2}\r\n                count\r\n            }\r\n            condition {\r\n                type # {'factor': 1, 'category': 2, 'brand': 3, 'campaign': 4}\r\n                values\r\n            }\r\n            access {\r\n                type # {'user': 1, 'access': 2}\r\n                values\r\n            }\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllDiscounts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: DiscountFilter) {\r\n  result: getAllDiscounts(filter: $filter) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    code\r\n    status # {'active': 1, 'inactive': 2}\r\n    type # {'percent': 1, 'amount': 2}\r\n    value\r\n    max_price\r\n    min_price\r\n    startAt\r\n    expireAt\r\n    settings {\r\n        use_limit {\r\n            type # {'user': 1, 'code': 2}\r\n            count\r\n        }\r\n        condition {\r\n            type # {'factor': 1, 'category': 2, 'brand': 3, 'campaign': 4}\r\n            values\r\n        }\r\n        access {\r\n            type # {'user': 1, 'access': 2}\r\n            values\r\n        }\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createDiscount",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: DiscountInput!) {\r\n  result: createDiscount(input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    code\r\n    status # {'active': 1, 'inactive': 2}\r\n    type # {'percent': 1, 'amount': 2}\r\n    value\r\n    max_price\r\n    min_price\r\n    startAt\r\n    expireAt\r\n    settings {\r\n        use_limit {\r\n            type # {'user': 1, 'code': 2}\r\n            count\r\n        }\r\n        condition {\r\n            type # {'factor': 1, 'category': 2, 'brand': 3, 'campaign': 4}\r\n            values\r\n        }\r\n        access {\r\n            type # {'user': 1, 'access': 2}\r\n            values\r\n        }\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"title\",\r\n            \"en\": \"title\"\r\n        },\r\n        \"code\": \"SKU43211234\",\r\n        \"status\": 1,\r\n        \"type\": 1,\r\n        \"value\": 15,\r\n        \"max_price\": 10000,\r\n        \"min_price\": 5000,\r\n        \"startAt\": \"1629793579621\",\r\n        \"expireAt\": \"1629793579621\",\r\n        \"settings\": {\r\n            \"use_limit\": {\r\n                \"type\": 1,\r\n                \"count\": 10\r\n            },\r\n            \"condition\": {\r\n                \"type\": 1,\r\n                \"values\": []\r\n            },\r\n            \"access\": {\r\n                \"type\": 1,\r\n                \"values\": []\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateDiscount",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: DiscountInput!) {\r\n  result: updateDiscount(id: $id, input: $input) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    code\r\n    status # {'active': 1, 'inactive': 2}\r\n    type # {'percent': 1, 'amount': 2}\r\n    value\r\n    max_price\r\n    min_price\r\n    startAt\r\n    expireAt\r\n    settings {\r\n        use_limit {\r\n            type # {'user': 1, 'code': 2}\r\n            count\r\n        }\r\n        condition {\r\n            type # {'factor': 1, 'category': 2, 'brand': 3, 'campaign': 4}\r\n            values\r\n        }\r\n        access {\r\n            type # {'user': 1, 'access': 2}\r\n            values\r\n        }\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6124b2f1e07a06418611c438\",\r\n  \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"title\",\r\n            \"en\": \"title\"\r\n        },\r\n        \"code\": \"SKU43211234\",\r\n        \"status\": 1,\r\n        \"type\": 1,\r\n        \"value\": 15,\r\n        \"max_price\": 10000,\r\n        \"min_price\": 5000,\r\n        \"startAt\": \"1629793579621\",\r\n        \"expireAt\": \"1629793579621\",\r\n        \"settings\": {\r\n            \"use_limit\": {\r\n                \"type\": 1,\r\n                \"count\": 10\r\n            },\r\n            \"condition\": {\r\n                \"type\": 1,\r\n                \"values\": []\r\n            },\r\n            \"access\": {\r\n                \"type\": 1,\r\n                \"values\": []\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setStatusDiscount",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $status: Boolean) {\r\n  result: setStatusDiscount(id: $id, status: $status) {\r\n    id\r\n    title # mulit language\r\n    title_panel\r\n    title_web\r\n    code\r\n    status # {'active': 1, 'inactive': 2}\r\n    type # {'percent': 1, 'amount': 2}\r\n    value\r\n    max_price\r\n    min_price\r\n    startAt\r\n    expireAt\r\n    settings {\r\n        use_limit {\r\n            type # {'user': 1, 'code': 2}\r\n            count\r\n        }\r\n        condition {\r\n            type # {'factor': 1, 'category': 2, 'brand': 3, 'campaign': 4}\r\n            values\r\n        }\r\n        access {\r\n            type # {'user': 1, 'access': 2}\r\n            values\r\n        }\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6124b2f1e07a06418611c438\",\r\n  \"status\": true\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteDiscount",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteDiscount(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6124b2f1e07a06418611c438\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Collection",
			"item": [
				{
					"name": "getCollectionProducts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!, $filter: ProductFilter) {\r\n  result: getCollectionProducts(id: $id,filter: $filter) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_ids\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant { # array with exact length 1\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # categories\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\",\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getConditionProducts",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($condition: CollectionConditionInput, $filter: ProductFilter) {\r\n  result: getConditionProducts(condition: $condition, filter: $filter) {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        summary # multi language\r\n        summary_panel\r\n        summary_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        strengths\r\n        strengths_panel\r\n        strengths_web\r\n        weaknesses\r\n        weaknesses_panel\r\n        weaknesses_web\r\n        main_features\r\n        main_features_panel\r\n        main_features_web\r\n        status # [\"inactive\": 1, \"show\": 2, \"draft\": 3]\r\n        publishAt\r\n        has_rating\r\n        is_special\r\n        type # [\"product\": 1, \"digital\": 2, \"service\": 3, \"preview\": 4]\r\n        category_ids\r\n        brand_id\r\n        seo_id\r\n        tag_ids\r\n        tag_group_id\r\n        user_id\r\n        visit_count\r\n        rate_average\r\n        user_rate\r\n        createdAt\r\n        updatedAt\r\n\r\n        details {\r\n            product_code # String\r\n            warehouse # String\r\n            use_count # Boolean\r\n            count # Int\r\n            count_status # Int\r\n            count_unit # Int\r\n            limit_min # Int\r\n            limit_max # Int\r\n            length # Int cm\r\n            width # Int cm\r\n            height # Int cm\r\n            weight # Int grams\r\n        }\r\n        price {\r\n            id\r\n            price\r\n            offer_price\r\n            offer_startAt\r\n            offer_expireAt\r\n            discount_percent\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        seo {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            keywords # multi language\r\n            keywords_panel\r\n            keywords_web\r\n            url\r\n            url_status\r\n            canonical_url\r\n            redirect_url_301\r\n            redirect_url_404\r\n            robots_status\r\n            createdAt\r\n            updatedAt\r\n        }\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        media_gallery {\r\n            media_id\r\n            main\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        video {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        files {\r\n            media_id\r\n            alt\r\n            url\r\n            \r\n            # media\r\n        }\r\n        attribute_groups {\r\n            attribute_group_id\r\n            attributes {\r\n                attribute_id\r\n                attribute_value_id\r\n\r\n                # attribute\r\n                # attribute_value\r\n                # value # multi language\r\n                # value_panel\r\n                # value_web\r\n            }\r\n\r\n            # attribute_group\r\n        }\r\n\r\n        has_variant # boolean\r\n        variant {\r\n            name # multi language\r\n            name_panel\r\n            name_web\r\n            type # {\"text\": 1, \"color\": 2, \"shop\": 3, \"file\":4 }\r\n            labels {\r\n                key\r\n                title # multi language\r\n                title_panel\r\n                title_web\r\n                values # JSON\r\n            }\r\n        }\r\n        mix_variant { # array with exact length 1\r\n            keys # array of String\r\n            is_main_price # boolean\r\n            is_active # boolean\r\n            sort\r\n            price_id\r\n            details {\r\n                product_code # String\r\n                warehouse # String\r\n                use_count # Boolean\r\n                count # Int\r\n                count_status # Int\r\n                count_unit # Int\r\n                limit_min # Int\r\n                limit_max # Int\r\n                length # Int cm\r\n                width # Int cm\r\n                height # Int cm\r\n                weight # Int grams\r\n            }\r\n            \r\n            # price\r\n            # price_history\r\n        }\r\n\r\n        collections {\r\n            related_products {\r\n                collection_type # {\"static\": 1, \"dynamic\": 2}\r\n                collection_id\r\n\r\n                # collection\r\n                # collection_title\r\n                # collection_title_panel\r\n                # collection_title_web\r\n                # collection_list\r\n            }\r\n        }\r\n\r\n        tutorials {\r\n            file_key\r\n            title\r\n            title_panel\r\n            title_web\r\n            user_access_ids\r\n\r\n            # user_accesses\r\n        }\r\n\r\n        # price_history\r\n        # categories\r\n        # brand\r\n        # tags\r\n        # tag_group\r\n        # comments\r\n        # user\r\n    }\r\n}",
								"variables": "{\r\n  \"filter\": null,\r\n  \"condition\": {\r\n        \"model_name\": \"ProductModel\",\r\n        \"limit\": 10,\r\n        \"logic\": 1,\r\n        \"orders\": [\r\n            {\r\n                \"type\": 1,\r\n                \"field\": \"createdAt\"\r\n            }\r\n        ],\r\n        \"wheres\": [\r\n            {\r\n                \"operator\": 1,\r\n                \"where_field\": \"price\",\r\n                \"where_value\": 10000\r\n            }\r\n        ]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getCollection(id: $id) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    source # {\"campaign\": 1, \"bag\": 2, \"gift\": 3, \"related_product\": 4}\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CollectionFilter) {\r\n  result: getCollections(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        type # {\"static\": 1, \"dynamic\": 2}\r\n        condition {\r\n            model_name\r\n            limit\r\n            logic # {\"and\": 1, \"or\": 2}\r\n            orders {\r\n                type # {\"asc\": 1, \"desc\": 2}\r\n                field\r\n            }\r\n            wheres {\r\n                operator # in CollectionModel in common folder\r\n                where_field\r\n                where_value\r\n            }\r\n        }\r\n        list {\r\n            product_id\r\n            has_variant_key\r\n            mix_variant_keys # array of arrays\r\n            sort\r\n            price_id\r\n            show\r\n            expireAt\r\n\r\n            # product\r\n            # price\r\n        }\r\n        extra_fields {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            show\r\n            seo_id\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            score\r\n            startAt\r\n            expireAt\r\n            has_timer\r\n            cover {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n            # seo\r\n        }\r\n        source # {\"campaign\": 1, \"bag\": 2, \"gift\": 3, \"related_product\": 4}\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CollectionFilter) {\r\n  result: getAllCollections(filter: $filter) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    source # {\"campaign\": 1, \"bag\": 2, \"gift\": 3, \"related_product\": 4}\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CollectionInput!) {\r\n  result: createCollection(input: $input) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    source # {\"campaign\": 1, \"bag\": 2, \"gift\": 3, \"related_product\": 4}\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"type\": 1,\r\n        \"condition\": {\r\n            \"model_name\": \"ProductModel\",\r\n            \"limit\": 10,\r\n            \"logic\": 1,\r\n            \"orders\": [\r\n                {\r\n                    \"type\": 1,\r\n                    \"field\": \"createdAt\"\r\n                }\r\n            ],\r\n            \"wheres\": [\r\n                {\r\n                    \"operator\": 1,\r\n                    \"where_field\": \"price\",\r\n                    \"where_value\": 10000\r\n                }\r\n            ]\r\n        },\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"score\": 1000,\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        },\r\n        \"source\": 1\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: CollectionInput!) {\r\n  result: updateCollection(id: $id, input: $input) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    source # {\"campaign\": 1, \"bag\": 2, \"gift\": 3, \"related_product\": 4}\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"608f1776d37ca40e44f51d9f\",\r\n    \"input\": {\r\n        \"type\": 2,\r\n        \"condition\": {\r\n            \"model_name\": \"ProductModel\",\r\n            \"limit\": 10,\r\n            \"logic\": 1,\r\n            \"orders\": [\r\n                {\r\n                    \"type\": 1,\r\n                    \"field\": \"createdAt\"\r\n                }\r\n            ],\r\n            \"wheres\": [\r\n                {\r\n                    \"operator\": 1,\r\n                    \"where_field\": \"price\",\r\n                    \"where_value\": 10000\r\n                }\r\n            ]\r\n        },\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"score\": 1000,\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        },\r\n        \"source\": 1\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteCollection(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "BagCollection",
			"item": [
				{
					"name": "getBagCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getBagCollection(id: $id) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBagCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CollectionFilter) {\r\n  result: getBagCollections(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        list {\r\n            product_id\r\n            has_variant_key\r\n            mix_variant_keys # array of arrays\r\n            sort\r\n            price_id\r\n\r\n            # product\r\n            # price\r\n        }\r\n        extra_fields {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            show\r\n            seo_id\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            startAt\r\n            expireAt\r\n            has_timer\r\n            cover {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n            # seo\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getBagAllCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CollectionFilter) {\r\n  result: getAllBagCollections(filter: $filter) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createBagCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CollectionInput!) {\r\n  result: createBagCollection(input: $input) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBagCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: CollectionInput!) {\r\n  result: updateBagCollection(id: $id, input: $input) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        price_id\r\n\r\n        # product\r\n        # price\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"608f1776d37ca40e44f51d9f\",\r\n    \"input\": {\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBagCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteBagCollection(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CampaignCollection",
			"item": [
				{
					"name": "getCampaignCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getCampaignCollection(id: $id) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCampaignCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CollectionFilter) {\r\n  result: getCampaignCollections(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        type # {\"static\": 1, \"dynamic\": 2}\r\n        condition {\r\n            model_name\r\n            limit\r\n            logic # {\"and\": 1, \"or\": 2}\r\n            orders {\r\n                type # {\"asc\": 1, \"desc\": 2}\r\n                field\r\n            }\r\n            wheres {\r\n                operator # in CollectionModel in common folder\r\n                where_field\r\n                where_value\r\n            }\r\n        }\r\n        list {\r\n            product_id\r\n            has_variant_key\r\n            mix_variant_keys # array of arrays\r\n            sort\r\n            show\r\n            expireAt\r\n\r\n            # product\r\n        }\r\n        extra_fields {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            show\r\n            seo_id\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            startAt\r\n            expireAt\r\n            has_timer\r\n            cover {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n            # seo\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCampaignAllCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CollectionFilter) {\r\n  result: getAllCampaignCollections(filter: $filter) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createCampaignCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CollectionInput!) {\r\n  result: createCampaignCollection(input: $input) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"type\": 1,\r\n        \"condition\": {\r\n            \"model_name\": \"ProductModel\",\r\n            \"limit\": 10,\r\n            \"logic\": 1,\r\n            \"orders\": [\r\n                {\r\n                    \"type\": 1,\r\n                    \"field\": \"createdAt\"\r\n                }\r\n            ],\r\n            \"wheres\": [\r\n                {\r\n                    \"operator\": 1,\r\n                    \"where_field\": \"price\",\r\n                    \"where_value\": 10000\r\n                }\r\n            ]\r\n        },\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateCampaignCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: CollectionInput!) {\r\n  result: updateCampaignCollection(id: $id, input: $input) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"608f1776d37ca40e44f51d9f\",\r\n    \"input\": {\r\n        \"type\": 2,\r\n        \"condition\": {\r\n            \"model_name\": \"ProductModel\",\r\n            \"limit\": 10,\r\n            \"logic\": 1,\r\n            \"orders\": [\r\n                {\r\n                    \"type\": 1,\r\n                    \"field\": \"createdAt\"\r\n                }\r\n            ],\r\n            \"wheres\": [\r\n                {\r\n                    \"operator\": 1,\r\n                    \"where_field\": \"price\",\r\n                    \"where_value\": 10000\r\n                }\r\n            ]\r\n        },\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteCampaignCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteCampaignCollection(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "GiftCollection",
			"item": [
				{
					"name": "getGiftCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getGiftCollection(id: $id) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getGiftCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CollectionFilter) {\r\n  result: getGiftCollections(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        list {\r\n            product_id\r\n            has_variant_key\r\n            mix_variant_keys # array of arrays\r\n            sort\r\n            show\r\n            expireAt\r\n\r\n            # product\r\n        }\r\n        extra_fields {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            description # multi language\r\n            description_panel\r\n            description_web\r\n            show\r\n            seo_id\r\n            media {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            score\r\n            startAt\r\n            expireAt\r\n            has_timer\r\n            cover {\r\n                media_id\r\n                alt\r\n                url\r\n\r\n                # media\r\n            }\r\n            cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n            # seo\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getGiftAllCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CollectionFilter) {\r\n  result: getAllGiftCollections(filter: $filter) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createGiftCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CollectionInput!) {\r\n  result: createGiftCollection(input: $input) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"score\": 1000,\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateGiftCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: CollectionInput!) {\r\n  result: updateGiftCollection(id: $id, input: $input) {\r\n    id\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        show\r\n        seo_id\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        score\r\n        startAt\r\n        expireAt\r\n        has_timer\r\n        cover {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        cover_position # {\"up\": 1,\"up-right\": 2,\"right\": 3,\"down-right\": 4,\"down\": 5, \"down-left\": 6,\"left\" 7,\"up-left\": 8}\r\n\r\n        # seo\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"608f1776d37ca40e44f51d9f\",\r\n    \"input\": {\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            },\r\n            \"description\": {\r\n                \"fa\": \"description\"\r\n            },\r\n            \"show\": true,\r\n            \"seo\": {\r\n                \"title\": {\r\n                    \"fa\": \"seo_title\"\r\n                },\r\n                \"description\": {\r\n                    \"fa\": \"seo description\"\r\n                },\r\n                \"keywords\": {\r\n                    \"fa\": \"seo keywords\"\r\n                },\r\n                \"url\": \"slug\",\r\n                \"canonical_url\": \"url/\",\r\n                \"redirect_url_301\": \"url/\",\r\n                \"redirect_url_404\": \"url/\",\r\n                \"robots_status\": 1\r\n            },\r\n            \"media\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"score\": 1000,\r\n            \"startAt\": \"1720078243061\",\r\n            \"expireAt\": \"1720078243061\",\r\n            \"has_timer\": true,\r\n            \"cover\": {\r\n                \"media_id\": null,\r\n                \"alt\": \"alt text\",\r\n                \"url\": \"\"\r\n            },\r\n            \"cover_position\": 2\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteGiftCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteGiftCollection(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "RelatedProductCollection",
			"item": [
				{
					"name": "getRelatedProductCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getRelatedProductCollection(id: $id) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRelatedProductCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CollectionFilter) {\r\n  result: getRelatedProductCollections(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        type # {\"static\": 1, \"dynamic\": 2}\r\n        condition {\r\n            model_name\r\n            limit\r\n            logic # {\"and\": 1, \"or\": 2}\r\n            orders {\r\n                type # {\"asc\": 1, \"desc\": 2}\r\n                field\r\n            }\r\n            wheres {\r\n                operator # in CollectionModel in common folder\r\n                where_field\r\n                where_value\r\n            }\r\n        }\r\n        list {\r\n            product_id\r\n            has_variant_key\r\n            mix_variant_keys # array of arrays\r\n            sort\r\n            show\r\n            expireAt\r\n\r\n            # product\r\n        }\r\n        extra_fields {\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getRelatedProductAllCollections",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: CollectionFilter) {\r\n  result: getAllRelatedProductCollections(filter: $filter) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createRelatedProductCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: CollectionInput!) {\r\n  result: createRelatedProductCollection(input: $input) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"type\": 1,\r\n        \"condition\": {\r\n            \"model_name\": \"ProductModel\",\r\n            \"limit\": 10,\r\n            \"logic\": 1,\r\n            \"orders\": [\r\n                {\r\n                    \"type\": 1,\r\n                    \"field\": \"createdAt\"\r\n                }\r\n            ],\r\n            \"wheres\": [\r\n                {\r\n                    \"operator\": 1,\r\n                    \"where_field\": \"price\",\r\n                    \"where_value\": 10000\r\n                }\r\n            ]\r\n        },\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateRelatedProductCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: CollectionInput!) {\r\n  result: updateRelatedProductCollection(id: $id, input: $input) {\r\n    id\r\n    type # {\"static\": 1, \"dynamic\": 2}\r\n    condition {\r\n        model_name\r\n        limit\r\n        logic # {\"and\": 1, \"or\": 2}\r\n        orders {\r\n            type # {\"asc\": 1, \"desc\": 2}\r\n            field\r\n        }\r\n        wheres {\r\n            operator # in CollectionModel in common folder\r\n            where_field\r\n            where_value\r\n        }\r\n    }\r\n    list {\r\n        product_id\r\n        has_variant_key\r\n        mix_variant_keys # array of arrays\r\n        sort\r\n        show\r\n        expireAt\r\n\r\n        # product\r\n    }\r\n    extra_fields {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"608f1776d37ca40e44f51d9f\",\r\n    \"input\": {\r\n        \"type\": 2,\r\n        \"condition\": {\r\n            \"model_name\": \"ProductModel\",\r\n            \"limit\": 10,\r\n            \"logic\": 1,\r\n            \"orders\": [\r\n                {\r\n                    \"type\": 1,\r\n                    \"field\": \"createdAt\"\r\n                }\r\n            ],\r\n            \"wheres\": [\r\n                {\r\n                    \"operator\": 1,\r\n                    \"where_field\": \"price\",\r\n                    \"where_value\": 10000\r\n                }\r\n            ]\r\n        },\r\n        \"list\": [\r\n            {\r\n                \"product_id\": \"610e55992c453230cdcacfeb\",\r\n                \"has_variant_key\": true,\r\n                \"mix_variant_keys\": [\"1-1\"],\r\n                \"sort\": 1,\r\n                \"show\": true,\r\n                \"expireAt\": \"1720078243061\"\r\n            }\r\n        ],\r\n        \"extra_fields\": {\r\n            \"title\": {\r\n                \"fa\": \"title\"\r\n            }\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteRelatedProductCollection",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteRelatedProductCollection(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "ShippingMethod",
			"item": [
				{
					"name": "getShippingMethod",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getShippingMethod(id: $id) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    description\r\n    description_panel\r\n    description_web\r\n    admin_description\r\n    is_main\r\n    is_default\r\n    status # {'active': 1,'inactive': 2}\r\n    weight_sensitivity\r\n    conditions {\r\n        type # {'weight': 1,'price': 2}\r\n        operator # {'less_than': 1,'less_than_or_equal': 2,'equal': 3,'not_equal': 4,'more_than': 5,'more_than_or_equal': 6}\r\n        value\r\n    }\r\n    attributes {\r\n        id\r\n        operator\r\n        from_weight\r\n        to_weight\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getShippingMethods",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: ShippingMethodFilter) {\r\n  result: getShippingMethods(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        title_panel\r\n        title_web\r\n        description\r\n        description_panel\r\n        description_web\r\n        admin_description\r\n        is_main\r\n        is_default\r\n        status # {'active': 1,'inactive': 2}\r\n        weight_sensitivity\r\n        conditions {\r\n            type # {'weight': 1,'price': 2}\r\n            operator # {'less_than': 1,'less_than_or_equal': 2,'equal': 3,'not_equal': 4,'more_than': 5,'more_than_or_equal': 6}\r\n            value\r\n        }\r\n        attributes {\r\n            id\r\n            operator\r\n            from_weight\r\n            to_weight\r\n        }\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllShippingMethods",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: ShippingMethodFilter) {\r\n  result: getAllShippingMethods(filter: $filter) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    description\r\n    description_panel\r\n    description_web\r\n    admin_description\r\n    is_main\r\n    is_default\r\n    status # {'active': 1,'inactive': 2}\r\n    weight_sensitivity\r\n    conditions {\r\n        type # {'weight': 1,'price': 2}\r\n        operator # {'less_than': 1,'less_than_or_equal': 2,'equal': 3,'not_equal': 4,'more_than': 5,'more_than_or_equal': 6}\r\n        value\r\n    }\r\n    attributes {\r\n        id\r\n        operator\r\n        from_weight\r\n        to_weight\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createShippingMethod",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: ShippingMethodInput!) {\r\n  result: createShippingMethod(input: $input) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    description\r\n    description_panel\r\n    description_web\r\n    admin_description\r\n    is_main\r\n    is_default\r\n    status # {'active': 1,'inactive': 2}\r\n    weight_sensitivity\r\n    conditions {\r\n        type # {'weight': 1,'price': 2}\r\n        operator # {'less_than': 1,'less_than_or_equal': 2,'equal': 3,'not_equal': 4,'more_than': 5,'more_than_or_equal': 6}\r\n        value\r\n    }\r\n    attributes {\r\n        id\r\n        operator\r\n        from_weight\r\n        to_weight\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"description\"\r\n        },\r\n        \"admin_description\": \"description\",\r\n        \"is_default\": false,\r\n        \"status\": 1,\r\n        \"weight_sensitivity\": true,\r\n        \"conditions\": [{\r\n            \"type\": 1,\r\n            \"operator\": 1,\r\n            \"value\": {}\r\n        }],\r\n        \"attributes\": [{\r\n            \"operator\": 1,\r\n            \"from_weight\": 250,\r\n            \"to_weight\": 500\r\n        }]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateShippingMethod",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: ShippingMethodInput!) {\r\n  result: updateShippingMethod(id: $id, input: $input) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    description\r\n    description_panel\r\n    description_web\r\n    admin_description\r\n    is_main\r\n    is_default\r\n    status # {'active': 1,'inactive': 2}\r\n    weight_sensitivity\r\n    conditions {\r\n        type # {'weight': 1,'price': 2}\r\n        operator # {'less_than': 1,'less_than_or_equal': 2,'equal': 3,'not_equal': 4,'more_than': 5,'more_than_or_equal': 6}\r\n        value\r\n    }\r\n    attributes {\r\n        id\r\n        operator\r\n        from_weight\r\n        to_weight\r\n    }\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"608f1776d37ca40e44f51d9f\",\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"description\"\r\n        },\r\n        \"admin_description\": \"description\",\r\n        \"is_default\": false,\r\n        \"status\": 1,\r\n        \"weight_sensitivity\": true,\r\n        \"conditions\": [{\r\n            \"type\": 1,\r\n            \"operator\": 1,\r\n            \"value\": {}\r\n        }],\r\n        \"attributes\": [{\r\n            \"operator\": 1,\r\n            \"from_weight\": 250,\r\n            \"to_weight\": 500\r\n        }]\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteShippingMethod",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteShippingMethod(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"60894d398022cf3bf8fbe83c\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "PaymentGateway",
			"item": [
				{
					"name": "getPaymentGateway",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getPaymentGateway(id: $id) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    gateway\r\n    status\r\n    fields\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": 3\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllPaymentGateways",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  result: getAllPaymentGateways {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    gateway\r\n    status\r\n    fields\r\n  }\r\n}\r\n",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createPaymentGateway",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: PaymentGatewayInput) {\r\n  result: createPaymentGateway(input: $input) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    gateway\r\n    status\r\n    fields\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"title\",\r\n            \"en\": \"title\"\r\n        },\r\n        \"gateway\": 1,\r\n        \"status\": true,\r\n        \"fields\": {\r\n            \"sandBox\": true,\r\n            \"terminalId\": \"something\",\r\n            \"userName\": \"something\",\r\n            \"userPassword\": \"j@34fk%sdfkjs56f^&kjf\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updatePaymentGateway",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID, $input: PaymentGatewayInput) {\r\n  result: updatePaymentGateway(id: $id, input: $input) {\r\n    id\r\n    title\r\n    title_panel\r\n    title_web\r\n    gateway\r\n    status\r\n    fields\r\n  }\r\n}",
								"variables": "{\r\n    \"id\": \"3\",\r\n    \"input\": {\r\n        \"title\": {\r\n            \"fa\": \"new title\",\r\n            \"en\": \"new title\"\r\n        },\r\n        \"gateway\": 2,\r\n        \"status\": false,\r\n        \"fields\": {\r\n            \"sandBox\": false,\r\n            \"terminalId\": \"new something\",\r\n            \"userName\": \"new something\",\r\n            \"userPassword\": \"new j@34fk%sdfkjs56f^&kjf\"\r\n        }\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deletePaymentGateway",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID) {\r\n  result: deletePaymentGateway(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"2\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "sortPaymentGateway",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: [sortPaymentGatewayInput]) {\r\n  result: sortPaymentGateways(input: $input) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"input\": [\r\n      {\r\n      \"id\": 1,\r\n      \"sort\": 2\r\n      },\r\n      {\r\n      \"id\": 2,\r\n      \"sort\": 1\r\n      }\r\n  ]\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Ticket",
			"item": [
				{
					"name": "getTicket",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID) {\r\n  result: getTicket(id: $id) {\r\n    id\r\n    title\r\n    text\r\n    status # {'open': 1,'close': 2}\r\n    department # todo\r\n    number\r\n    name\r\n    last_name\r\n    email\r\n    mobile\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    user_id\r\n    reply_to_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n    # reply_to\r\n    # replies\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"610e55992c453230cdcacfeb\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTicketDepartments",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query {\r\n  result: getTicketDepartments{\r\n    title\r\n    title_panel\r\n    title_web\r\n    number\r\n\r\n    # tickets\r\n  }\r\n}",
								"variables": ""
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getTickets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: TicketFilter) {\r\n  result: getTickets(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title\r\n        text\r\n        status # {'open': 1,'close': 2}\r\n        department # todo\r\n        number\r\n        name\r\n        last_name\r\n        email\r\n        mobile\r\n        media {\r\n            media_id\r\n            alt\r\n            url\r\n\r\n            # media\r\n        }\r\n        user_id\r\n        reply_to_id\r\n        createdAt\r\n        updatedAt\r\n\r\n        # user\r\n        # reply_to\r\n        # replies\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllTickets",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: TicketFilter) {\r\n  result: getAllTickets(filter: $filter) {\r\n    id\r\n    title\r\n    text\r\n    status # {'open': 1,'close': 2}\r\n    department # todo\r\n    number\r\n    name\r\n    last_name\r\n    email\r\n    mobile\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    user_id\r\n    reply_to_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n    # reply_to\r\n    # replies\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "replyTicket",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID,$input: TicketInput) {\r\n  result: replyTicket(id: $id, input: $input) {\r\n    id\r\n    title\r\n    text\r\n    status # {'open': 1,'close': 2}\r\n    department # todo\r\n    number\r\n    name\r\n    last_name\r\n    email\r\n    mobile\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    user_id\r\n    reply_to_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n    # reply_to\r\n    # replies\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": \"610e55992c453230cdcacfeb\",\r\n    \"input\": {\r\n        \"title\": \"title of reply\",\r\n        \"text\": \"text of reply\",\r\n        \"media\": {\r\n            \"media_id\": \"\",\r\n            \"alt\": \"alt text\",\r\n            \"url\": \"\"\r\n        },\r\n        \"send_with\": 0,\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "setStatusTicket",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID,$input: TicketSetStatusInput) {\r\n  result: setStatusTicket(id: $id, input: $input) {\r\n    id\r\n    title\r\n    text\r\n    status # {'open': 1,'close': 2}\r\n    department # todo\r\n    number\r\n    name\r\n    last_name\r\n    email\r\n    mobile\r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    user_id\r\n    reply_to_id\r\n    createdAt\r\n    updatedAt\r\n\r\n    # user\r\n    # reply_to\r\n    # replies\r\n  }\r\n}\r\n",
								"variables": "{\r\n    \"id\": \"610e55992c453230cdcacfeb\",\r\n    \"input\": {\r\n        \"status\": 2\r\n    }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "CareerForm",
			"item": [
				{
					"name": "getBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($id: ID!) {\r\n  result: getBrand(id: $id) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"608fe4da1bc1c70cc09e70b7\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getCareerForms",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($page: Int, $limit: Int, $filter: CareerFormFilter) {\r\n  result: getCareerForms(page: $page, limit: $limit, filter: $filter) {\r\n    paginate {\r\n        page\r\n        limit\r\n        total\r\n        pages\r\n    }\r\n    data {\r\n        id\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        user_name\r\n        user_last_name\r\n        user_email\r\n        user_mobile\r\n        fields {\r\n            name\r\n            title # multi language\r\n            title_panel\r\n            title_web\r\n            type\r\n            size\r\n            value\r\n        }\r\n\r\n        user_id\r\n        createdAt\r\n        updatedAt\r\n        \r\n        # user\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"page\": 1,\r\n  \"limit\": 15,\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "getAllBrands",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query($filter: BrandFilter) {\r\n  result: getAllBrands(filter: $filter) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"filter\": null\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "createBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($input: BrandInput!) {\r\n  result: createBrand(input: $input) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"new brand\"\r\n    },\r\n    \"active\": true,\r\n    \"show_in_menu\": true,\r\n    \"description\": {\r\n        \"fa\": \"description about this brand\"\r\n    },\r\n    \"media\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    },\r\n    \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"seo title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"seo keywords\"\r\n        },\r\n        \"url\": \"slug\",\r\n        \"canonical_url\": \"/url/\",\r\n        \"redirect_url_301\": \"/url/\",\r\n        \"redirect_url_404\": \"/url/\",\r\n        \"robots_status\": 1\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "updateBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!, $input: BrandInput!) {\r\n  result: updateBrand(id: $id, input: $input) {\r\n    id\r\n    title # multi language\r\n    title_panel\r\n    title_web\r\n    active\r\n    show_in_menu\r\n    description # multi language\r\n    description_panel\r\n    description_web\r\n    seo_id\r\n    user_id\r\n    createdAt\r\n    updatedAt\r\n    \r\n    media {\r\n        media_id\r\n        alt\r\n        url\r\n\r\n        # media\r\n    }\r\n    # user\r\n    seo {\r\n        title # multi language\r\n        title_panel\r\n        title_web\r\n        description # multi language\r\n        description_panel\r\n        description_web\r\n        keywords # multi language\r\n        keywords_panel\r\n        keywords_web\r\n        url\r\n        url_status #[\"auto\": 1, \"custom\": 2]\r\n        canonical_url\r\n        redirect_url_301\r\n        redirect_url_404\r\n        robots_status\r\n        createdAt\r\n        updatedAt\r\n    }\r\n  }\r\n}\r\n",
								"variables": "{\r\n  \"id\": \"608fe4da1bc1c70cc09e70b7\",\r\n  \"input\": {\r\n    \"title\": {\r\n        \"fa\": \"changed brand\"\r\n    },\r\n    \"active\": false,\r\n    \"show_in_menu\": false,\r\n    \"description\": {\r\n        \"fa\": \"changed description about this brand\"\r\n    },\r\n    \"media\": {\r\n        \"media_id\": null,\r\n        \"alt\": \"alt text\",\r\n        \"url\": \"\"\r\n    },\r\n    \"seo\": {\r\n        \"title\": {\r\n            \"fa\": \"new seo title\"\r\n        },\r\n        \"description\": {\r\n            \"fa\": \"new seo description\"\r\n        },\r\n        \"keywords\": {\r\n            \"fa\": \"new seo keywords\"\r\n        },\r\n        \"url\": \"new slug\",\r\n        \"canonical_url\": \"new/url/\",\r\n        \"redirect_url_301\": \"new/url/\",\r\n        \"redirect_url_404\": \"new/url/\",\r\n        \"robots_status\": 2\r\n    }\r\n  }\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "deleteBrand",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation($id: ID!) {\r\n  result: deleteBrand(id: $id) {\r\n    success\r\n    message\r\n  }\r\n}",
								"variables": "{\r\n  \"id\": \"6106bcd4f8600f760eafa9f2\"\r\n}"
							}
						},
						"url": {
							"raw": "{{url}}/{{gql_prefix}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"{{gql_prefix}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "run-tasks --api for cronjob",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/cronjob/run-tasks",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"cronjob",
						"run-tasks"
					]
				}
			},
			"response": []
		},
		{
			"name": "panelLogin Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"try {\r",
							"    const token = JSON.parse(responseBody)['data']['result']['token']\r",
							"    postman.setEnvironmentVariable(\"token\",token);\r",
							"} catch {\r",
							"    console.log(\"token not found\")\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "graphql",
					"graphql": {
						"query": "mutation($username: String!, $password: String!,$recaptcha_v3_token: String) {\r\n  result: panelLogin(username: $username, password: $password,recaptcha_v3_token: $recaptcha_v3_token) {\r\n    token\r\n    user {\r\n        id\r\n        name\r\n        last_name\r\n        full_name\r\n        username\r\n        email\r\n        mobile\r\n        is_active\r\n        access_id \r\n        createdAt\r\n        updatedAt\r\n\r\n        # user_information\r\n        # access\r\n        # accessControlLists\r\n        # blogs\r\n        # products\r\n        # brands\r\n        # categories\r\n        # medias\r\n    }\r\n    menu_items {\r\n        id\r\n        access_component_id # if is null menu item is collapse\r\n        parent_id\r\n        sort\r\n        title\r\n        icon\r\n        badge_key\r\n        route\r\n        columns\r\n        fields\r\n        actions\r\n        child_access_components_keys\r\n    }\r\n  }\r\n}",
						"variables": "{\r\n    \"username\": \"majidshishegar0@gmail.com\",\r\n    \"password\": \"1234\",\r\n    \"recaptcha_v3_token\": \"skip\"\r\n}"
					}
				},
				"url": {
					"raw": "{{url}}/{{gql_prefix}}",
					"host": [
						"{{url}}"
					],
					"path": [
						"{{gql_prefix}}"
					]
				}
			},
			"response": []
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"try {",
					"    const new_token = pm.response.headers.find(",
					"        (item)=>{",
					"            if (item.key === 'new_token')",
					"                return true;",
					"            return false;",
					"            }",
					"        ).value;",
					"    postman.setEnvironmentVariable(\"token\",new_token);",
					"} catch (e) {",
					"    console.log (e)",
					"}"
				]
			}
		}
	]
}